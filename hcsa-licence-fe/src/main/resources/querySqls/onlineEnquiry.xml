<?xml version="1.0" encoding="UTF-8"?>
<sqls catalog="onlineEnquiry">

    <sql key = "searchSubmissionByAssistedReproduction" remarks="search submission by Assisted Reproduction">
        <![CDATA[
        SELECT distinct tt.* from (
        SELECT  dds.ID, dds.SUBMISSION_NO, dds.SUBMISSION_TYPE,
            case dds.SUBMISSION_TYPE when 'AR_TP002' then  dds.CYCLE_STAGE  else '-' end as CYCLE_STAGE, dds.SUBMIT_DT ,
            CONCAT(case lp.BUSINESS_NAME when null then '-, ' when '' then '-, ' else lp.BUSINESS_NAME + ', ' end ,
                  case p.BLK_NO when null then null else ''+p.BLK_NO end ,
               case p.STREET_NAME when null then null else ' '+p.STREET_NAME end ,
               case p.BUILDING_NAME when null then null else ' '+p.BUILDING_NAME end
               , case p.FLOOR_NO when null then null else ' #'+p.FLOOR_NO end
               , case p.UNIT_NO when null then null else '-'+p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case p.POSTAL_CODE
                  when null then null
                  else ', '+p.POSTAL_CODE end
              ) AS BUSINESS_NAME ,dc.PATIENT_CODE
                FROM ds_data_submission dds
                join ds_cycle dc on dc.ID =dds.CYCLE_ID and dc.DS_TYPE = 'ART' and dc.HCI_CODE not in (select ar_cen.HCI_CODE from ds_center ar_cen)
                join premises p on dc.HCI_CODE =p.HCI_CODE and  p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dc.HCI_CODE)
                JOIN lic_premises lp on lp.PREMISES_ID =p.ID
                where dds.STATUS not in ('DS002','DS012')
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre</#if>
            <#if submissionId??> AND  :submissionId = dds.SUBMISSION_NO</#if>
            <#if dc_licenseeId??> AND  :dc_licenseeId = dc.LICENSEE_ID</#if>
            <#if submissionType??> AND  charindex(:submissionType, dds.SUBMISSION_TYPE) >0</#if>
            <#if cycleStage??> AND  charindex(:cycleStage, dds.CYCLE_STAGE) >0</#if>
            <#if submission_start_date??> AND dds.SUBMIT_DT >= convert(date,:submission_start_date)</#if>
            <#if submission_to_date??> AND dds.SUBMIT_DT <= convert(datetime,:submission_to_date)</#if>
            UNION ALL
            SELECT  dds.ID, dds.SUBMISSION_NO, dds.SUBMISSION_TYPE,
            case dds.SUBMISSION_TYPE when 'AR_TP002' then  dds.CYCLE_STAGE  else '-' end as CYCLE_STAGE, dds.SUBMIT_DT ,
            CONCAT(case dcen.CENTER_NAME when null then '-, ' else dcen.CENTER_NAME + ', ' end ,
                  case dcen.BLK_NO when null then null else ''+dcen.BLK_NO end ,
               case dcen.STREET_NAME when null then null else ' '+dcen.STREET_NAME end
               , case dcen.BUILDING_NAME when null then null else ' '+dcen.BUILDING_NAME end
               , case dcen.FLOOR_NO when null then null else ' #'+dcen.FLOOR_NO end
               , case dcen.UNIT_NO when null then null else '-'+dcen.UNIT_NO end
               ,case dcen.POSTAL_CODE when null then null else ', '+dcen.POSTAL_CODE end
              ) AS BUSINESS_NAME ,dc.PATIENT_CODE
                FROM ds_data_submission dds
                join ds_cycle dc on dc.ID =dds.CYCLE_ID and dc.DS_TYPE = 'ART'
                join ds_center dcen on dcen.HCI_CODE =dc.HCI_CODE
                where dds.STATUS not in ('DS002','DS012')
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre</#if>
            <#if submissionId??> AND  :submissionId = dds.SUBMISSION_NO</#if>
            <#if dc_licenseeId??> AND  :dc_licenseeId = dc.LICENSEE_ID</#if>
            <#if submissionType??> AND  charindex(:submissionType, dds.SUBMISSION_TYPE) >0</#if>
            <#if cycleStage??> AND  charindex(:cycleStage, dds.CYCLE_STAGE) >0</#if>
            <#if submission_start_date??> AND dds.SUBMIT_DT >= convert(date,:submission_start_date)</#if>
            <#if submission_to_date??> AND dds.SUBMIT_DT <= convert(datetime,:submission_to_date)</#if>
        ) tt

         ]]>
    </sql>


    <sql key = "searchPatientByAssistedReproduction" remarks="search patient by Assisted Reproduction">
        <![CDATA[
           SELECT distinct dpi.ID, dpi.NAME, dpi.ID_TYPE, dpi.ID_NUMBER, dpi.DATE_OF_BIRTH, dpi.NATIONALITY,dc2.PATIENT_CODE CD_PATIENT_CODE,dpi.PATIENT_CODE
                FROM ds_patient_information dpi
                join ds_data_submission dds on dds.ID = dpi.SUBMISSION_ID
                JOIN ds_cycle dc on dc.ID =dds.CYCLE_ID and dc.DS_TYPE = 'ART'
                left join ds_cycle dc2 on dc2.PATIENT_CODE = dpi.PATIENT_CODE
                where 1=1
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre </#if>
            <#if patientName??> AND  charindex(:patientName, dpi.NAME) >0</#if>
            <#if patientIdNumber??> AND  :patientIdNumber = dpi.ID_NUMBER </#if>
            <#if patient_id_types??> AND  ${patient_id_types}</#if>
            <#if dc_licenseeId??> AND  :dc_licenseeId = dc.LICENSEE_ID</#if>
        ]]>
    </sql>


    <sql key = "searchPatientAjaxByAssistedReproduction" remarks="search patient ajax by Assisted Reproduction">
        <![CDATA[
           SELECT distinct ajax.* FROM (
                SELECT dc.ID ,dpi.PATIENT_CODE patient_code, 'AR' DS_TYPE ,dacs.TREATMENT_FRESH_NATURAL ,dacs.TREATMENT_FRESH_STIMULATED ,dacs.TREATMENT_FROZEN_EMBRYO ,dacs.TREATMENT_FROZEN_OOCYTE ,dc.HCI_CODE,
            CONCAT(case lp.BUSINESS_NAME when null then '-, ' when '' then '-, ' else lp.BUSINESS_NAME + ', ' end ,
                  case p.BLK_NO when null then null else ''+p.BLK_NO end ,
               case p.STREET_NAME when null then null else ' '+p.STREET_NAME end ,
               case p.BUILDING_NAME when null then null else ' '+p.BUILDING_NAME end
               , case p.FLOOR_NO when null then null else ' #'+p.FLOOR_NO end
               , case p.UNIT_NO when null then null else '-'+p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case p.POSTAL_CODE
                  when null then null
                  else ', '+p.POSTAL_CODE end
              ) AS BUSINESS_NAME ,dc.CREATED_DT ,dc.STATUS
                FROM ds_cycle dc
                join ds_patient_information dpi on dpi.PATIENT_CODE =dc.PATIENT_CODE
                join ds_data_submission dds on dds.CYCLE_ID = dc.ID and dds.STATUS not in ('DS002','DS012')
                join ds_ar_cycle_stage dacs on dacs.SUBMISSION_ID =dds.ID
                join premises p on dc.HCI_CODE =p.HCI_CODE and  p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dc.HCI_CODE)
                JOIN lic_premises lp on lp.PREMISES_ID =p.ID
                where dc.CYCLE_TYPE ='DSCL_008' and dc.HCI_CODE not in (select ar_cen.HCI_CODE from ds_center ar_cen)
                UNION ALL
                SELECT dc.ID ,dpi.PATIENT_CODE patient_code, 'AR' DS_TYPE ,dacs.TREATMENT_FRESH_NATURAL ,dacs.TREATMENT_FRESH_STIMULATED ,dacs.TREATMENT_FROZEN_EMBRYO ,dacs.TREATMENT_FROZEN_OOCYTE ,dc.HCI_CODE,
            CONCAT(case dcen.CENTER_NAME when null then '-, ' else dcen.CENTER_NAME + ', ' end ,
                  case dcen.BLK_NO when null then null else ''+dcen.BLK_NO end ,
               case dcen.STREET_NAME when null then null else ' '+dcen.STREET_NAME end
               , case dcen.BUILDING_NAME when null then null else ' '+dcen.BUILDING_NAME end
               , case dcen.FLOOR_NO when null then null else ' #'+dcen.FLOOR_NO end
               , case dcen.UNIT_NO when null then null else '-'+dcen.UNIT_NO end
               ,case dcen.POSTAL_CODE when null then null else ', '+dcen.POSTAL_CODE end
              ) AS BUSINESS_NAME  ,dc.CREATED_DT ,dc.STATUS
                FROM ds_cycle dc
                join ds_patient_information dpi on dpi.PATIENT_CODE =dc.PATIENT_CODE
                join ds_data_submission dds on dds.CYCLE_ID = dc.ID and dds.STATUS not in ('DS002','DS012')
                join ds_ar_cycle_stage dacs on dacs.SUBMISSION_ID =dds.ID
                join ds_center dcen on dcen.HCI_CODE =dc.HCI_CODE
                where dc.CYCLE_TYPE ='DSCL_008'
                UNION ALL
                SELECT dc.ID,dpi.PATIENT_CODE patient_code,
                case dc.CYCLE_TYPE
                when 'DSCL_009' then 'IUI'
                when 'DSCL_0010' then 'EFO'
                when 'DSCL_0011' then '-'
                else '-' end
                as DS_TYPE ,null TREATMENT_FRESH_NATURAL ,null TREATMENT_FRESH_STIMULATED ,null TREATMENT_FROZEN_EMBRYO ,null TREATMENT_FROZEN_OOCYTE ,dc.HCI_CODE,
                CONCAT(case lp.BUSINESS_NAME when null then '-, ' when '' then '-, ' else lp.BUSINESS_NAME + ', ' end ,
                  case p.BLK_NO when null then null else ''+p.BLK_NO end ,
               case p.STREET_NAME when null then null else ' '+p.STREET_NAME end ,
               case p.BUILDING_NAME when null then null else ' '+p.BUILDING_NAME end
               , case p.FLOOR_NO when null then null else ' #'+p.FLOOR_NO end
               , case p.UNIT_NO when null then null else '-'+p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case p.POSTAL_CODE
                  when null then null
                  else ', '+p.POSTAL_CODE end
              ) AS BUSINESS_NAME ,dc.CREATED_DT ,dc.STATUS
                FROM ds_cycle dc
                join ds_patient_information dpi on dpi.PATIENT_CODE =dc.PATIENT_CODE
                join ds_data_submission dds on dds.CYCLE_ID = dc.ID and dds.STATUS not in ('DS002','DS012')
                join premises p on dc.HCI_CODE =p.HCI_CODE and  p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dc.HCI_CODE)
                JOIN lic_premises lp on lp.PREMISES_ID =p.ID
                where dc.CYCLE_TYPE in ('DSCL_009','DSCL_010','DSCL_011') and dc.HCI_CODE not in (select ar_cen.HCI_CODE from ds_center ar_cen)
                UNION ALL
                SELECT dc.ID,dpi.PATIENT_CODE patient_code,
                case dc.CYCLE_TYPE
                when 'DSCL_009' then 'IUI'
                when 'DSCL_0010' then 'EFO'
                when 'DSCL_0011' then '-'
                else '-' end
                as DS_TYPE ,null TREATMENT_FRESH_NATURAL ,null TREATMENT_FRESH_STIMULATED ,null TREATMENT_FROZEN_EMBRYO ,null TREATMENT_FROZEN_OOCYTE ,dc.HCI_CODE,
                CONCAT(case dcen.CENTER_NAME when null then '-, ' else dcen.CENTER_NAME + ', ' end ,
                  case dcen.BLK_NO when null then null else ''+dcen.BLK_NO end ,
               case dcen.STREET_NAME when null then null else ' '+dcen.STREET_NAME end
               , case dcen.BUILDING_NAME when null then null else ' '+dcen.BUILDING_NAME end
               , case dcen.FLOOR_NO when null then null else ' #'+dcen.FLOOR_NO end
               , case dcen.UNIT_NO when null then null else '-'+dcen.UNIT_NO end
               ,case dcen.POSTAL_CODE when null then null else ', '+dcen.POSTAL_CODE end
              ) AS BUSINESS_NAME ,dc.CREATED_DT ,dc.STATUS
                FROM ds_cycle dc
                join ds_patient_information dpi on dpi.PATIENT_CODE =dc.PATIENT_CODE
                join ds_data_submission dds on dds.CYCLE_ID = dc.ID and dds.STATUS not in ('DS002','DS012')
                join ds_center dcen on dcen.HCI_CODE =dc.HCI_CODE
                where dc.CYCLE_TYPE in ('DSCL_009','DSCL_010','DSCL_011')

            ) ajax
            where 1=1
            <#if patientCode??> AND  :patientCode = ajax.patient_code</#if>

        ]]>
    </sql>

    <sql key = "advancedSearchPatientByAssistedReproduction" remarks="Advanced Search patient by Assisted Reproduction">
        <![CDATA[
           SELECT distinct dc.ID, dpi.NAME, dpi.ID_TYPE, dpi.ID_NUMBER, dpi.DATE_OF_BIRTH, dpi.NATIONALITY,dc.CREATED_DT ,
           CONCAT(case lp.BUSINESS_NAME when null then '-, ' when '' then '-, ' else lp.BUSINESS_NAME + ', ' end ,
                  case p.BLK_NO when null then null else ''+p.BLK_NO end ,
               case p.STREET_NAME when null then null else ' '+p.STREET_NAME end , 
               case p.BUILDING_NAME when null then null else ' '+p.BUILDING_NAME end
               , case p.FLOOR_NO when null then null else ' #'+p.FLOOR_NO end
               , case p.UNIT_NO when null then null else '-'+p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case p.POSTAL_CODE
                  when null then null
                  else ', '+p.POSTAL_CODE end
              ) AS BUSINESS_NAME,dpi.PATIENT_CODE
                FROM ds_data_submission dds
                join ds_cycle dc on dds.CYCLE_ID=dc.ID and dds.STATUS not in ('DS002','DS012') and dc.CYCLE_TYPE in ('DSCL_008','DSCL_009','DSCL_010','DSCL_011','DSCL_001','DSCL_007')
                join premises p on dc.HCI_CODE =p.HCI_CODE and  p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dc.HCI_CODE)
                JOIN lic_premises lp on lp.PREMISES_ID =p.ID
                join ds_patient_information dpi on (dc.PATIENT_CODE =dpi.PATIENT_CODE or dpi.SUBMISSION_ID = dds.ID)
                left join ds_husband dh on dpi.ID= dh.PATIENT_ID
                left join ds_ar_cycle_stage dacs on dacs.SUBMISSION_ID=dds.ID
                left join ds_end_cycle_stage decs on decs.SUBMISSION_ID=dds.ID
                left join ds_donor_sample donor on donor.SUBMISSION_ID=dds.ID
                left join ds_fertilisation_stage dfs on dfs.SUBMISSION_ID=dds.ID
                left join ds_embryo_transferred_outcome_stage detos on detos.SUBMISSION_ID=dds.ID
                left join ds_pregnancy_outcome_stage dpos on dpos.SUBMISSION_ID=dds.ID
                left join ds_ar_treatment_subsidies_stage datss on datss.SUBMISSION_ID=dds.ID
                left join ds_pgt_stage dps on dps.SUBMISSION_ID=dds.ID
                left join ds_iui_treatment_subsidies_stage ditss on ditss.SUBMISSION_ID=dds.ID
                left join ds_disposal_stage ddiss on ddiss.SUBMISSION_ID=dds.ID
                left join ds_transfer_in_out_stage dtios on dtios.SUBMISSION_ID=dds.ID
                where 1=1
                <#if patientName??> AND  charindex(:patientName, dpi.NAME) >0</#if>
                <#if patientIdType??> AND  charindex(:patientIdType, dpi.ID_TYPE) >0</#if>
                <#if patientIdNumber??> AND  :patientIdNumber = dpi.ID_NUMBER</#if>
                <#if patientAgeDateFrom??> AND dpi.DATE_OF_BIRTH >= convert(date,:patientAgeDateFrom)</#if>
                <#if patientAgeDateTo??> AND dpi.DATE_OF_BIRTH <= convert(datetime,:patientAgeDateTo)</#if>
                <#if submissionId??> AND  :submissionId = dds.SUBMISSION_NO</#if>
                <#if submission_start_date??> AND dds.SUBMIT_DT >= convert(date,:submission_start_date)</#if>
                <#if submission_to_date??> AND dds.SUBMIT_DT <= convert(datetime,:submission_to_date)</#if>

                <#if husbandName??> AND  charindex(:husbandName, dh.NAME) >0</#if>
                <#if husbandIdType??> AND  charindex(:husbandIdType, dh.ID_TYPE) >0</#if>
                <#if husbandIdNumber??> AND  charindex(:husbandIdNumber, dh.ID_NUMBER) >0</#if>

                <#if arCentre??> AND  dc.HCI_CODE = :arCentre</#if>
                <#if embryologist??> AND  charindex(:embryologist, dacs.EMBRYOLOGIST) >0</#if>
                <#if arPractitioner??> AND  charindex(:arPractitioner, dacs.PRACTITIONER) >0</#if>

                <#if cycleStagesStatus??> AND  :cycleStagesStatus = dc.STATUS </#if>

                <#if cycleStagesDateFrom??> AND dc.CREATED_DT >= convert(date,:cycleStagesDateFrom)</#if>
                <#if cycleStagesDateTo??> AND dc.CREATED_DT <= convert(datetime,:cycleStagesDateTo)</#if>
                <#if arOrIui??> AND :arOrIui = dc.DS_TYPE </#if>
                <#if ivm??> AND  :ivm = dacs.IN_VITRO_MATURATION </#if>
                <#if cart_fcn??> AND  :cart_fcn = dacs.TREATMENT_FRESH_NATURAL </#if>
                <#if cart_fcs??> AND  :cart_fcs = dacs.TREATMENT_FRESH_STIMULATED </#if>
                <#if cart_foc??> AND  :cart_foc = dacs.TREATMENT_FROZEN_OOCYTE </#if>
                <#if cart_foe??> AND  :cart_foe = dacs.TREATMENT_FROZEN_EMBRYO </#if>
                <#if freshCycleNumFrom??> AND  :freshCycleNumFrom <= dacs.TOTAL_PREVIOUSLY_PREVIOUSLY </#if>
                <#if freshCycleNumTo??> AND  :freshCycleNumTo >= dacs.TOTAL_PREVIOUSLY_PREVIOUSLY </#if>
                <#if abandonedCycle??> AND  :abandonedCycle = decs.IS_CYCLE_ABANDONED </#if>

                <#if donorName??> AND  charindex(:donorName, donor.DONOR_NAME) >0</#if>
                <#if donorIdNumber??> AND  charindex(:donorIdNumber, donor.ID_NUMBER) >0</#if>
                <#if FROM_DONOR??> AND  (:FROM_DONOR = dfs.IS_FROM_DONOR or :FROM_DONOR = dfs.IS_FROM_DONOR_TISSUE ) </#if>
                <#if FROM_HUSBAND??> AND  (:FROM_HUSBAND = dfs.IS_FROM_HUSBAND or :FROM_HUSBAND = dfs.IS_FROM_HUSBAND_TISSUE)</#if>
                <#if gift??> AND  :gift = dfs.IS_GIFT_USED </#if>
                <#if icsi??> AND  :icsi = dfs.IS_ICSI_USED </#if>
                <#if zift??> AND  :zift = dfs.IS_ZIFT_USED </#if>
                <#if ivf??> AND  :ivf = dfs.IS_IVF_USED </#if>
                <#if embTransNums??> AND dfs.TRANSFER_NUM in( :embTransNums)</#if>
                <#if ageEmbryosNums??> AND (dfs.FIRST_EMBRYO_AGE in( :ageEmbryosNums) or dfs.SECOND_EMBRYO_AGE in( :ageEmbryosNums) or dfs.THIRD_EMBRYO_AGE in( :ageEmbryosNums)) </#if>
                <#if outcomeEmbryoTransferreds??> AND detos.TRANSFERED_OUTCOME in( :outcomeEmbryoTransferreds) </#if>
                <#if birthEventsTotalList??> AND (dpos.MALE_LIVE_BIRTH_NUM+dpos.FEMALE_LIVE_BIRTH_NUM) in( :birthEventsTotalList) </#if>
                <#if deliveryDateFrom??> AND dpos.DELIVERY_DATE >= convert(date,:deliveryDateFrom)</#if>
                <#if deliveryDateTo??> AND dpos.DELIVERY_DATE <= convert(datetime,:deliveryDateTo)</#if>
                <#if patientArtYes??> AND  'ATSACF002' = datss.ART_CO_FUNDING or 'ATSACF003' = datss.ART_CO_FUNDING </#if>
                <#if patientArtNo??> AND  'ATSACF001' = datss.ART_CO_FUNDING </#if>
                <#if patientIuiYes??> AND  'PICF002' = ditss.IUI_CO_FUNDING </#if>
                <#if patientIuiNo??> AND  'PICF001' = ditss.IUI_CO_FUNDING </#if>
                <#if patientPgtYes??> AND  1 = ditss.IUI_CO_FUNDING </#if>
                <#if patientPgtNo??> AND  0 = dps.IS_PGT_CONFUNDING </#if>
                <#if disposalTypeList??> AND ddiss.DISPOSED_TYPE in( :disposalTypeList)</#if>
                <#if disposedTotalNumber??> AND (ddiss.IMMATURE+ddiss.ABNORMALLY_FERTILISED+ddiss.UNFERTILISED+ddiss.ATRETIC+ddiss.DAMAGED+ddiss.LYSED_OR_DEGENERATED+ddiss.UNHEALTHY_NUM+ddiss.OTHER_DISCARDED_NUM) = :disposedTotalNumber</#if>
                <#if disposalDateFrom??> AND ddiss.CREATED_DT >= convert(date,:disposalDateFrom)</#if>
                <#if disposalDateTo??> AND ddiss.CREATED_DT <= convert(datetime,:disposalDateTo)</#if>
                <#if transferInOrOut??> AND  :transferInOrOut = dtios.TRANSFER_TYPE </#if>
                <#if transferredList??> AND  (:transferredOocyte <= dtios.EMBRYO_NUM or :transferredEmbryo <= dtios.SPERM_VIALS_NUM or :transferredSperm <= dtios.OOCYTE_NUM) </#if>
                <#if transferredInFrom??> AND  charindex(:transferredInFrom, dtios.TRANS_IN_FROM_HCI_CODE) >0</#if>
                <#if transferOutTo??> AND  charindex(:transferOutTo, dtios.TRANS_OUT_TO_HCI_CODE) >0</#if>
                <#if transferDateFrom??> AND dtios.CREATED_DT >= convert(date,:transferDateFrom)</#if>
                <#if transferDateTo??> AND dtios.CREATED_DT <= convert(datetime,:transferDateTo)</#if>
                <#if pgtNo??> AND  dps.ID is null </#if>
                <#if pgtYes??> AND  dps.ID is not null </#if>
                <#if pgtMCom??> AND  dps.IS_PGT_M_WU_COM = :pgtMCom </#if>
                <#if pgtMRare??> AND  dps.IS_PGT_M_WU_RARE = :pgtMRare </#if>
                <#if pgtMEbt??> AND  dps.IS_PGT_M_EBT = :pgtMEbt </#if>
                <#if pgtSr??> AND  dps.IS_PGT_SR = :pgtSr </#if>
                <#if pgtA??> AND  dps.IS_PGT_A = :pgtA </#if>
                <#if ptt??> AND  dps.IS_PTT = :ptt </#if>
                <#if pgtOthers??> AND  dps.IS_OTHER_PGT = :pgtOthers </#if>
                <#if PGT_M_DSLD??> AND  dps.IS_PGT_M_DSLD = :PGT_M_DSLD </#if>


        ]]>
    </sql>

    <sql key = "searchTransactionHistoryByAssistedReproduction" remarks="search Transaction History">
        <![CDATA[
        SELECT distinct tt.* from (
        SELECT  dds.ID ,
            CONCAT(case lp.BUSINESS_NAME when null then '-, ' when '' then '-, ' else lp.BUSINESS_NAME + ', ' end ,
                  case p.BLK_NO when null then null else ''+p.BLK_NO end ,
               case p.STREET_NAME when null then null else ' '+p.STREET_NAME end ,
               case p.BUILDING_NAME when null then null else ' '+p.BUILDING_NAME end
               , case p.FLOOR_NO when null then null else ' #'+p.FLOOR_NO end
               , case p.UNIT_NO when null then null else '-'+p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case p.POSTAL_CODE
                  when null then null
                  else ', '+p.POSTAL_CODE end
              ) AS BUSINESS_NAME,
            dds.SUBMISSION_NO ,dds.SUBMIT_DT ,dds.CYCLE_STAGE ,dds.CYCLE_ID ,
                ( select count(dds2.CYCLE_ID) From ds_data_submission dds2 where dds2.CYCLE_ID= dc.ID and dds2.STATUS not in ('DS002','DS012'))  cycle_no ,
                daic.FROZEN_OOCY_NUM, daic.THAWED_OOCY_NUM, daic.FRESH_OOCY_NUM, daic.FROZEN_EMBR_NUM, daic.THAWED_EMBR_NUM, daic.FRESH_EMBR_NUM, daic.FROZEN_SPERM_NUM
                FROM ds_data_submission dds
                join ds_cycle dc on dc.ID =dds.CYCLE_ID and dc.DS_TYPE = 'ART' and dc.HCI_CODE not in (select ar_cen.HCI_CODE from ds_center ar_cen)
                join premises p on dc.HCI_CODE =p.HCI_CODE and  p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dc.HCI_CODE)
                JOIN lic_premises lp on lp.PREMISES_ID =p.ID
                left join ds_data_submission dds3 on dds3.CYCLE_ID= dc.ID and dds3.STATUS not in ('DS002','DS012')
                left join ds_ar_inventory_change daic on daic.SUBMISSION_ID = dds.ID

                where dds.STATUS not in ('DS002','DS012')
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre</#if>
            <#if cycleNo??> AND  cycle_no = :cycleNo </#if>
            <#if submission_start_date??> AND dds.SUBMIT_DT >= convert(date,:submission_start_date)</#if>
            <#if submission_to_date??> AND dds.SUBMIT_DT <= convert(datetime,:submission_to_date)</#if>
            <#if transfers??> AND  dds3.CYCLE_STAGE ='AR_STG016'</#if>
            <#if patientCode??> AND  dc.PATIENT_CODE = :patientCode </#if>
            UNION ALL
            SELECT  dds.ID ,
            CONCAT(case dcen.CENTER_NAME when null then '-, ' else dcen.CENTER_NAME + ', ' end ,
                  case dcen.BLK_NO when null then null else ''+dcen.BLK_NO end ,
               case dcen.STREET_NAME when null then null else ' '+dcen.STREET_NAME end
               , case dcen.BUILDING_NAME when null then null else ' '+dcen.BUILDING_NAME end
               , case dcen.FLOOR_NO when null then null else ' #'+dcen.FLOOR_NO end
               , case dcen.UNIT_NO when null then null else '-'+dcen.UNIT_NO end
               ,case dcen.POSTAL_CODE when null then null else ', '+dcen.POSTAL_CODE end
              ) AS BUSINESS_NAME,
            dds.SUBMISSION_NO ,dds.SUBMIT_DT ,dds.CYCLE_STAGE ,dds.CYCLE_ID ,
                ( select count(dds2.CYCLE_ID) From ds_data_submission dds2 where dds2.CYCLE_ID= dc.ID and dds2.STATUS not in ('DS002','DS012'))  cycle_no ,
                daic.FROZEN_OOCY_NUM, daic.THAWED_OOCY_NUM, daic.FRESH_OOCY_NUM, daic.FROZEN_EMBR_NUM, daic.THAWED_EMBR_NUM, daic.FRESH_EMBR_NUM, daic.FROZEN_SPERM_NUM
                FROM ds_data_submission dds
                join ds_cycle dc on dc.ID =dds.CYCLE_ID and dc.DS_TYPE = 'ART'
                join ds_center dcen on dcen.HCI_CODE =dc.HCI_CODE
                left join ds_data_submission dds3 on dds3.CYCLE_ID= dc.ID and dds3.STATUS not in ('DS002','DS012')
                left join ds_ar_inventory_change daic on daic.SUBMISSION_ID = dds.ID

                where dds.STATUS not in ('DS002','DS012')
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre</#if>
            <#if cycleNo??> AND  cycle_no = :cycleNo </#if>
            <#if submission_start_date??> AND dds.SUBMIT_DT >= convert(date,:submission_start_date)</#if>
            <#if submission_to_date??> AND dds.SUBMIT_DT <= convert(datetime,:submission_to_date)</#if>
            <#if transfers??> AND  dds3.CYCLE_STAGE ='AR_STG016'</#if>
            <#if patientCode??> AND  dc.PATIENT_CODE = :patientCode </#if>
        ) tt


         ]]>
    </sql>

    <sql key = "searchCycleStageByPatientCode" remarks="search Cycle Stage">
        <![CDATA[
            SELECT distinct dc.ID,( select count(dds2.CYCLE_ID) From ds_data_submission dds2 where dds2.CYCLE_ID= dc.ID and dds2.STATUS not in ('DS002','DS012')) cycle_no ,dc.CREATED_DT ,dc.CYCLE_TYPE, dds.CYCLE_STAGE ,dc.STATUS
            from ds_cycle dc
            join ds_data_submission dds on  dds.SUBMISSION_NO = (select MAX(dds1.SUBMISSION_NO) from ds_data_submission dds1 where dds1.CYCLE_ID =dc.ID )
             where dc.CYCLE_TYPE in ('DSCL_008','DSCL_009','DSCL_010','DSCL_011') and dds.STATUS not in ('DS002','DS012') and dc.STATUS !='DS012'
            <#if patientCode??> AND  dc.PATIENT_CODE = :patientCode </#if>

         ]]>
    </sql>

    <sql key = "searchDonorSampleByAssistedReproduction" remarks="search Donor Sample">
        <![CDATA[
        SELECT distinct tt.* from (
        SELECT  dds2.ID ,dds.SUBMISSION_NO,
            CONCAT(case lp.BUSINESS_NAME when null then '-, ' when '' then '-, ' else lp.BUSINESS_NAME + ', ' end ,
                  case p.BLK_NO when null then null else ''+p.BLK_NO end ,
               case p.STREET_NAME when null then null else ' '+p.STREET_NAME end ,
               case p.BUILDING_NAME when null then null else ' '+p.BUILDING_NAME end
               , case p.FLOOR_NO when null then null else ' #'+p.FLOOR_NO end
               , case p.UNIT_NO when null then null else '-'+p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case p.POSTAL_CODE
                  when null then null
                  else ', '+p.POSTAL_CODE end
              ) AS BUSINESS_NAME,
              dds2.DONOR_SAMPLE_CODE ,dds2.SAMPLE_TYPE ,
            case dds2.SAMPLE_FROM_HCI_CODE when 'AR_SC_001' then CONCAT('Others - ',dds2.SAMPLE_FROM_OTHERS)
            else
           		CONCAT(case dds2lp.BUSINESS_NAME
                  when null then '-, '
                  when '' then '-, '
                  else dds2lp.BUSINESS_NAME + ', ' end ,
                  case dds2p.BLK_NO
                  when null then null
                  else ''+dds2p.BLK_NO end ,
               case dds2p.STREET_NAME
                  when null then null
                  else ' '+dds2p.STREET_NAME end
               , case dds2p.BUILDING_NAME
                  when null then null
                  else ' '+dds2p.BUILDING_NAME end
               , case dds2p.FLOOR_NO
                  when null then null
                  else ' #'+dds2p.FLOOR_NO end
               , case dds2p.UNIT_NO
                  when null then null
                  else '-'+dds2p.UNIT_NO end
               ,
               SUBSTRING ((
		        SELECT ', #' + pou.FLOOR_NO +'-'+pou.UNIT_NO
				        FROM premises_operational_unit pou
				        WHERE pou.PREMISES_ID =dds2p.ID
				        ORDER BY SEQ_NUM ASC
				        FOR XML path('')
		    ), 1, 1000)
               ,case dds2p.POSTAL_CODE
                  when null then null
                  else ', '+dds2p.POSTAL_CODE end
              ) end
             AS SAMPLE_FROM_HCI_CODE ,
           		dds2.DONOR_NAME ,( select count(ddsa.DONOR_SAMPLE_ID) From ds_donor_sample_age ddsa where ddsa.SAMPLE_KEY= dds2.SAMPLE_KEY and ddsa.STATUS !='DAS_A')  age_no
                FROM ds_data_submission dds
                join ds_cycle dc on dc.ID =dds.CYCLE_ID and dc.HCI_CODE not in (select ar_cen.HCI_CODE from ds_center ar_cen)
                join premises p on dc.HCI_CODE =p.HCI_CODE and  p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dc.HCI_CODE)
                JOIN lic_premises lp on lp.PREMISES_ID =p.ID
				join ds_donor_sample dds2 on dds2.SUBMISSION_ID = dds.ID
				left join premises dds2p on dds2.SAMPLE_FROM_HCI_CODE =dds2p.HCI_CODE and  dds2p.CREATED_DT =(select max(CREATED_DT) from premises where HCI_CODE =dds2.SAMPLE_FROM_HCI_CODE)
                left JOIN lic_premises dds2lp on dds2lp.PREMISES_ID =dds2p.ID

                where dc.CYCLE_TYPE ='DSCL_003' and dds.STATUS not in ('DS002','DS012')
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre </#if>
            <#if donorSampleCode??> AND  charindex(:donorSampleCode, dds2.DONOR_SAMPLE_CODE) >0</#if>
            <#if othersDonorSampleCode??> AND  charindex(:othersDonorSampleCode, dds2.SAMPLE_FROM_OTHERS) >0</#if>
            <#if sampleType??> AND  charindex(:sampleType, dds2.SAMPLE_TYPE) >0</#if>
            <#if sampleHciCode??> AND dds2.SAMPLE_FROM_HCI_CODE = :sampleHciCode </#if>
            <#if donorIdType??> AND  charindex(:donorIdType, dds2.ID_TYPE) >0</#if>
            <#if donorIdNumber??> AND  charindex(:donorIdNumber, dds2.ID_NUMBER) >0</#if>
            <#if birthEventsTotalList??> AND (select count(ddsa.DONOR_SAMPLE_ID) From ds_donor_sample_age ddsa where ddsa.SAMPLE_KEY= dds2.SAMPLE_KEY and ddsa.STATUS !='DAS_A') in( :birthEventsTotalList) </#if>
            <#if dc_licenseeId??> AND  :dc_licenseeId = dc.LICENSEE_ID</#if>


            UNION ALL
            SELECT  dds2.ID ,dds.SUBMISSION_NO,
            CONCAT(case dcen.CENTER_NAME when null then '-, ' else dcen.CENTER_NAME + ', ' end ,
                  case dcen.BLK_NO when null then null else ''+dcen.BLK_NO end ,
               case dcen.STREET_NAME when null then null else ' '+dcen.STREET_NAME end
               , case dcen.BUILDING_NAME when null then null else ' '+dcen.BUILDING_NAME end
               , case dcen.FLOOR_NO when null then null else ' #'+dcen.FLOOR_NO end
               , case dcen.UNIT_NO when null then null else '-'+dcen.UNIT_NO end
               ,case dcen.POSTAL_CODE when null then null else ', '+dcen.POSTAL_CODE end
              ) AS BUSINESS_NAME,
              dds2.DONOR_SAMPLE_CODE ,dds2.SAMPLE_TYPE ,
            case dds2.SAMPLE_FROM_HCI_CODE when 'AR_SC_001' then CONCAT('Others - ',dds2.SAMPLE_FROM_OTHERS)
            else
           		CONCAT(case dcen2.CENTER_NAME
                  when null then '-, '
                  when '' then '-, '
                  else dcen2.CENTER_NAME + ', ' end ,
                  case dcen2.BLK_NO
                  when null then null
                  else ''+dcen2.BLK_NO end ,
               case dcen2.STREET_NAME
                  when null then null
                  else ' '+dcen2.STREET_NAME end
               , case dcen2.BUILDING_NAME
                  when null then null
                  else ' '+dcen2.BUILDING_NAME end
               , case dcen2.FLOOR_NO
                  when null then null
                  else ' #'+dcen2.FLOOR_NO end
               , case dcen2.UNIT_NO
                  when null then null
                  else '-'+dcen2.UNIT_NO end
               ,case dcen2.POSTAL_CODE
                  when null then null
                  else ', '+dcen2.POSTAL_CODE end
              ) end
             AS SAMPLE_FROM_HCI_CODE ,
           		dds2.DONOR_NAME ,( select count(ddsa.DONOR_SAMPLE_ID) From ds_donor_sample_age ddsa where ddsa.SAMPLE_KEY= dds2.SAMPLE_KEY and ddsa.STATUS !='DAS_A')  age_no
                FROM ds_data_submission dds
                join ds_cycle dc on dc.ID =dds.CYCLE_ID
                join ds_center dcen on dcen.HCI_CODE =dc.HCI_CODE and dcen.CENTER_TYPE ='ART'
				join ds_donor_sample dds2 on dds2.SUBMISSION_ID = dds.ID
				left join ds_center dcen2  on dds2.SAMPLE_FROM_HCI_CODE =dcen2.HCI_CODE and dcen2.CENTER_TYPE ='ART'
                where dc.CYCLE_TYPE ='DSCL_003' and dds.STATUS not in ('DS002','DS012')
            <#if arCentre??> AND  dc.HCI_CODE = :arCentre </#if>
            <#if donorSampleCode??> AND  charindex(:donorSampleCode, dds2.DONOR_SAMPLE_CODE) >0</#if>
            <#if othersDonorSampleCode??> AND  charindex(:othersDonorSampleCode, dds2.SAMPLE_FROM_OTHERS) >0</#if>
            <#if sampleType??> AND  charindex(:sampleType, dds2.SAMPLE_TYPE) >0</#if>
            <#if sampleHciCode??> AND dds2.SAMPLE_FROM_HCI_CODE = :sampleHciCode </#if>
            <#if donorIdType??> AND  charindex(:donorIdType, dds2.ID_TYPE) >0</#if>
            <#if donorIdNumber??> AND  charindex(:donorIdNumber, dds2.ID_NUMBER) >0</#if>
            <#if birthEventsTotalList??> AND (select count(ddsa.DONOR_SAMPLE_ID) From ds_donor_sample_age ddsa where ddsa.SAMPLE_KEY= dds2.SAMPLE_KEY and ddsa.STATUS !='DAS_A') in( :birthEventsTotalList) </#if>
            <#if dc_licenseeId??> AND  :dc_licenseeId = dc.LICENSEE_ID</#if>
        )tt

         ]]>
    </sql>


</sqls>