/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;
import sop.webflow.rt.api.BaseProcessClass;

public class INTERNET___MohRfcPermisesList___1 extends BaseProcessClass {

	private static final String DELEGATOR ="MohRequestForChangeMenuDelegator";
	
	public void preparePremisesList_OnStepProcess_0 () throws Exception { 
	
		EngineHelper.delegate(DELEGATOR, "preparePremisesList", this);
	}

	public void doPremisesList_OnStepProcess_0 () throws Exception { 
	
		EngineHelper.delegate(DELEGATOR, "doPremisesList", this);
	}

	public void doPremisesEdit_OnStepProcess_0 () throws Exception { 
	
		EngineHelper.delegate(DELEGATOR, "doPremisesEdit", this);
	}

	public void step1_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "start", this);
	}

	public void preparePremisesEdit_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "preparePremisesEdit", this);
	}

	public void init_OnStepProcess_0() throws Exception {
	// 		init->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepare", this);
	}

	public void controlSwitch_OnStepProcess_0() throws Exception {
	// 		ControlSwitch->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "controlSwitch", this);
	}

	public void prepareAckPage_OnStepProcess_0 () throws Exception { 
		// 		PrepareAckPage->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareAckPage", this);
	}

	public void jumpBlank_OnStepProcess_0() throws Exception {
	 	
	// 		jumpBlank->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "jumpBank", this);
	}

	public void doPayment_OnStepProcess_0() throws Exception { 
		
	// 		doPayment->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPayment", this);
	}

	public void back_OnStepProcess_0() throws Exception {
	// 		back->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "back", this);
	}

	public void preparePayment_OnStepProcess_0() throws Exception {
	// 		preparePayment->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prePayment", this);
	}

}
