/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;

import sop.webflow.rt.api.BaseProcessClass;

public class INTERNET___MohARCycleStagesManual___1 extends BaseProcessClass {
	private static final String DELEGATOR ="arCycleStagesManualDelegator";

	public void start_OnStepProcess_0() throws Exception {
	// 		Start->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doStart", this);
	}

	public void prepareCycleStageSelection_OnStepProcess_0() throws Exception {
	// 		PrepareCycleStageSelection->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareCycleStageSelection", this);
	}

	public void prepareStage_OnStepProcess_0() throws Exception {
	// 		PrepareStage->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareStage", this);
	}

	public void prepareARCycle_OnStepProcess_0() throws Exception {
	// 		PrepareARCycle->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareARCycle", this);
	}

	public void prepareIUICycle_OnStepProcess_0() throws Exception {
	// 		PrepareIUICycle->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareIUICycle", this);
	}

	public void prepareEFOCycle_OnStepProcess_0() throws Exception {
	// 		PrepareEFOCycle->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareEFOCycle", this);
	}

	public void prepareOocyteRetrieval_OnStepProcess_0() throws Exception {
	// 		PrepareOocyteRetrieval->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareOocyteRetrieval", this);
	}

	public void prepareFertilisation_OnStepProcess_0() throws Exception {
	// 		PrepareFertilisation->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareFertilisation", this);
	}

	public void prepareEmbryoCreated_OnStepProcess_0() throws Exception {
	// 		PrepareEmbryoCreated->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareEmbryoCreated", this);
	}

	public void prepareThawing_OnStepProcess_0() throws Exception {
	// 		PrepareThawing->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareThawing", this);
	}

	public void preparePreimplantation_OnStepProcess_0() throws Exception {
	// 		PreparePreimplantation->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPreparePreimplantation", this);
	}

	public void prepareEmbryoTransfer_OnStepProcess_0() throws Exception {
	// 		PrepareEmbryoTransfer->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareEmbryoTransfer", this);
	}

	public void prepareARTreatmentSubsidies_OnStepProcess_0() throws Exception {
	// 		PrepareARTreatmentSubsidies->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareARTreatmentSubsidies", this);
	}

	public void prepareIUITreatmentSubsidies_OnStepProcess_0() throws Exception {
	// 		PrepareIUITreatmentSubsidies->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareIUITreatmentSubsidies", this);
	}

	public void prepareOutcomeEmbryoTransferred_OnStepProcess_0() throws Exception {
	// 		PrepareOutcomeEmbryoTransferred->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareOutcomeEmbryoTransferred", this);
	}

	public void prepareOutcome_OnStepProcess_0() throws Exception {
	// 		PrepareOutcome->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareOutcome", this);
	}

	public void prepareOutcomePregnancy_OnStepProcess_0() throws Exception {
	// 		PrepareOutcomePregnancy->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareOutcomePregnancy", this);
	}

	public void prepareFreezing_OnStepProcess_0() throws Exception {
	// 		PrepareFreezing->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareFreezing", this);
	}

	public void prepareDonation_OnStepProcess_0() throws Exception {
	// 		PrepareDonation->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareDonation", this);
	}

	public void prepareDisposal_OnStepProcess_0() throws Exception {
	// 		PrepareDisposal->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareDisposal", this);
	}

	public void prepareEndCycle_OnStepProcess_0() throws Exception {
	// 		PrepareEndCycle->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareEndCycle", this);
	}

	public void prepareTransferInOut_OnStepProcess_0() throws Exception {
	// 		PrepareTransferInOut->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrepareTransferInOut", this);
	}

	public void back_OnStepProcess_0() throws Exception {
	// 		Back->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doBack", this);
	}

}
