/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;
import sop.webflow.rt.api.BaseProcessClass;

public class INTERNET___MohServiceRelatedInformation___1 extends BaseProcessClass {
	private static final String DELEGATOR ="clinicalLaboratoryDelegator";
	private static final String NEWAPPLICATIONDELEGATOR ="newApplicationDelegator";

	public void start_OnStepProcess_0() throws Exception {
	// 		Start->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doStart", this);
	}

	public void prepareJumpPage_OnStepProcess_0() throws Exception {
	// 		PrepareJumpPage->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareJumpPage", this);
	}

	public void prepareLaboratoryDisciplines_OnStepProcess_0() throws Exception {
	// 		PrepareLaboratoryDisciplines->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareLaboratoryDisciplines", this);
	}

	public void prepareGovernanceOfficers_OnStepProcess_0() throws Exception {
	// 		PrepareGovernanceOfficers->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareGovernanceOfficers", this);
	}

	public void prepareDisciplineAllocation_OnStepProcess_0() throws Exception {
	// 		PrepareDisciplineAllocation->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareDisciplineAllocation", this);
	}

	public void preparePrincipalOfficers_OnStepProcess_0() throws Exception {
	// 		PreparePrincipalOfficers->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "preparePrincipalOfficers", this);
	}

	public void prepareDocuments_OnStepProcess_0() throws Exception {
	// 		PrepareDocuments->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareDocuments", this);
	}

	public void prepareJump_OnStepProcess_0() throws Exception {
	// 		prepareJump->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareJump", this);
	}
	
	public void prepareView_OnStepProcess_0() throws Exception {
		// 		PrepareView->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareView", this);
	}
	
	public void doLaboratoryDisciplines_OnStepProcess_0() throws Exception {
	// 		doLaboratoryDisciplines->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doLaboratoryDisciplines", this);
	}

	public void doGovernanceOfficers_OnStepProcess_0() throws Exception {
	// 		doGovernanceOfficers->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doGovernanceOfficers", this);
	}

	public void doDisciplineAllocation_OnStepProcess_0() throws Exception {
	// 		doDisciplineAllocation->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doDisciplineAllocation", this);
	}

	public void doPrincipalOfficers_OnStepProcess_0() throws Exception {
	// 		doPrincipalOfficers->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPrincipalOfficers", this);
	}

	public void doDocuments_OnStepProcess_0() throws Exception {
	// 		doDocuments->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doDocuments", this);
	}

	public void prepareResult_OnStepProcess_0() throws Exception {
	// 		PrepareResult->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareResult", this);
	}

	public void doSaveDraft_OnStepProcess_0() throws Exception {
	// 		doSaveDraft->OnStepProcess
		EngineHelper.delegate(NEWAPPLICATIONDELEGATOR, "doSaveDraft", this);
	}

	public void doSubmit_OnStepProcess_0() throws Exception {
	// 		doSubmit->OnStepProcess
		EngineHelper.delegate(NEWAPPLICATIONDELEGATOR, "doSubmit", this);
	}

	

}
