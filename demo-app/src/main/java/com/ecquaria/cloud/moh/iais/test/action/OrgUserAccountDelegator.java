/*
 *   This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.test.action;

import com.ecquaria.cloud.annotation.Delegator;
import com.ecquaria.cloud.moh.iais.test.entity.OrgUserAccount;
import com.ecquaria.cloud.moh.iais.test.service.OrgUserAccountService;
import com.ecquaria.cloud.moh.iais.test.sqlExecute.InformationDao;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import sop.webflow.rt.api.BaseProcessClass;

import java.util.List;

/**
 * OrgUserAccountController
 *
 * @author suocheng
 * @date 7/12/2019
 */
@Delegator
@Slf4j
public class OrgUserAccountDelegator {

    @Autowired
    private OrgUserAccountService orgUserAccountService;
    @Autowired
    private InformationDao informationDao;

    public  void prepareData(BaseProcessClass bpc){
        log.info("The prepareData start ...");
        Page<OrgUserAccount> page = orgUserAccountService.getOrgUserAccountsByOrgId(0,0,2);
        long totalElememts =page.getTotalElements();
        int  totalPages =  page.getTotalPages();
        List<OrgUserAccount> lists = page.getContent();

        bpc.request.setAttribute("lists",lists);

        log.info("********************************"+lists.size());
        log.info("********************************"+lists.get(0).getId());
        List list = informationDao.testSQl();
        log.info("************list size--->:"+list.size());
        for (Object item : list) {
            Object[] obj = (Object[]) item;
            for(Object o:obj){
                if (o != null) {
                    log.info(o.toString());
                    log.info("   ");
                }
            }
        }


        log.info("The prepareData end ...");
    }
    public  void prepareSwitch(BaseProcessClass bpc){
        log.info("The prepareSwitch start ...");

        log.info("The prepareSwitch end ...");
    }
    public  void doSearch(BaseProcessClass bpc){
        log.info("The prepareSwitch start ...");

        log.info("The prepareSwitch end ...");
    }
    public  void doSorting(BaseProcessClass bpc){
        log.info("The prepareSwitch start ...");

        log.info("The prepareSwitch end ...");
    }
    public  void doPaging(BaseProcessClass bpc){
        log.info("The prepareSwitch start ...");

        log.info("The prepareSwitch end ...");
    }
    public  void doDelete(BaseProcessClass bpc){
        log.info("The prepareSwitch start ...");

        log.info("The prepareSwitch end ...");
    }

}
