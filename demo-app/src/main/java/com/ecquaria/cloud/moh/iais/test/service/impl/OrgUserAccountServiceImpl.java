/*
 *   This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.test.service.impl;

import com.ecquaria.cloud.moh.iais.test.dao.OrgUserAccountDao;
import com.ecquaria.cloud.moh.iais.test.entity.OrgUserAccount;
import com.ecquaria.cloud.moh.iais.test.service.OrgUserAccountService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.*;
import org.springframework.stereotype.Service;

/**
 * OrgUserAccountServiceImpl
 *
 * @author suocheng
 * @date 7/12/2019
 */
@Service
@Slf4j
public class OrgUserAccountServiceImpl implements OrgUserAccountService {

    @Autowired
    private OrgUserAccountDao orgUserAccountDao;

    @Override
    public Page<OrgUserAccount> getOrgUserAccountsByOrgId(Integer orgId,int pageNumber,int pageSize) {
        Sort.Direction sort = Sort.Direction.DESC;
        Pageable pageable =  new PageRequest(pageNumber,pageSize,sort,"id");

        OrgUserAccount orgUserAccount = new OrgUserAccount();
        orgUserAccount.setOrgId(orgId);
        ExampleMatcher exampleMatcher =
                ExampleMatcher.matching().withMatcher("orgId",ExampleMatcher.GenericPropertyMatchers.exact());

        Example<OrgUserAccount> example = Example.of(orgUserAccount,exampleMatcher);

        return orgUserAccountDao.findAll(example,pageable);
    }
}
