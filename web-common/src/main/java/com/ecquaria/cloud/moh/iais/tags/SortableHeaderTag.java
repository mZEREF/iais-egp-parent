/*
 *   This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.tags;

import com.ecquaria.cloud.moh.iais.dto.SearchParam;
import org.apache.log4j.Logger;
import sg.gov.moh.iais.common.utils.ParamUtil;
import sg.gov.moh.iais.common.utils.StringUtil;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspTagException;
import javax.servlet.jsp.tagext.TagSupport;
import java.util.Map;

public class SortableHeaderTag extends TagSupport {
    private static final long serialVersionUID = 6803399323616533101L;
    private static Logger log = Logger.getLogger(SortableHeaderTag.class.getName());

    private String field;
    private String value;
    private String param;
    private String jsFunc;
    private boolean needSort;

    public SortableHeaderTag() {
        super();
        init();
    }

    // resets local state
    private void init() {
        field = "";
        value = "";
        param = "";
        jsFunc = "";
        needSort = true;
    }

    // Releases any resources we may have (or inherit)
    public void release() {
        super.release();
        init();
    }

    public int doStartTag() throws JspException {
        if (param == null || param.length() == 0) {
            param = "searchParam";
        }
        StringBuilder sb = new StringBuilder();
        sb.append("<th class=\"sorting\">");
        sb.append(StringUtil.viewHtml(value));
        if (needSort) {
            sb.append("<span class=\"column-sort\">");
            String isActiveUp = "";
            String isActiveDown = "";
            SearchParam searchParam = (SearchParam) ParamUtil.getScopeAttr((HttpServletRequest) pageContext.getRequest(), param);
            if (searchParam != null) {
                Map<String, String> sortMap = searchParam.getSortMap();
                if (sortMap.containsKey(field.toUpperCase())) {
                    String type = sortMap.get(field);
                    if (!StringUtil.isEmpty(type)) {
                        if (SearchParam.ASCENDING.equals(type))
                            isActiveUp = " active";
                        else if (SearchParam.DESCENDING.equals(type))
                            isActiveDown = " active";
                    }
                }
            }
            if (StringUtil.isEmpty(jsFunc)) {
                jsFunc = "sortRecords";
            }
            sb.append("<a class=\"sort-up");
            sb.append(isActiveUp).append("\"").append(" href=\"");
            if (!" active".equals(isActiveUp)) {
                sb.append("javascript:");
                sb.append(jsFunc);
                sb.append("('");
                sb.append(field);
                sb.append("', '");
                sb.append(SearchParam.ASCENDING);
                sb.append("');");
            } else {
                sb.append("#");
            }
            sb.append("\"  title=\"Sort up\"></a>");
            sb.append("<a class=\"sort-down");
            sb.append(isActiveDown).append("\"").append(" href=\"");
            if (!" active".equals(isActiveDown)) {
                sb.append("javascript:");
                sb.append(jsFunc);
                sb.append("('");
                sb.append(field);
                sb.append("', '");
                sb.append(SearchParam.DESCENDING);
                sb.append("');");
            } else {
                sb.append("#");
            }
            sb.append("\" title=\"Sort down\"></a></span>");
        }
        sb.append("</th>");

        try {
            pageContext.getOut().print(StringUtil.escapeSecurityScript(sb.toString()));
        } catch (Exception ex) {
            log.error("", ex);
            throw new JspTagException("SortableHeaderTag: " + ex.getMessage());
        }
        release();

        return SKIP_BODY;
    }

    public int doEndTag() {
        return EVAL_PAGE;
    }

    public void setField(String field) {
        this.field = field;
    }
    public void setValue(String value) {
        this.value = value;
    }
    public void setParam(String param) {
        this.param = param;
    }
    public void setJsFunc(String jsFunc) {
		this.jsFunc = jsFunc;
	}
    public void setNeedSort(boolean needSort) {
        this.needSort = needSort;
    }
}
