/*
 *   This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.helper;

import com.ecquaria.cloud.helper.SpringContextHelper;
import com.ecquaria.cloud.moh.iais.common.helper.RedisCacheHelper;
import com.ecquaria.cloud.moh.iais.common.utils.MiscUtil;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.api.mockito.mockpolicies.Slf4jMockPolicy;
import org.powermock.core.classloader.annotations.MockPolicy;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;
import org.springframework.context.ApplicationContext;
import org.springframework.mock.web.MockHttpServletRequest;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

import static org.powermock.api.mockito.PowerMockito.when;

/**
 * AuditTrailHelperTest
 *
 * @author suocheng
 * @date 8/8/2019
 */
@RunWith(PowerMockRunner.class)
@MockPolicy(Slf4jMockPolicy.class)
@PrepareForTest({AuditTrailHelper.class, MiscUtil.class, RedisCacheHelper.class, ApplicationContext.class, IaisEGPHelper.class})
public class AuditTrailHelperTest {
    private MockHttpServletRequest request = new MockHttpServletRequest();


    @Test
    public  void testAuditFunction(){
        PowerMockito.mockStatic(MiscUtil.class);
        PowerMockito.mockStatic(IaisEGPHelper.class);
        PowerMockito.when(MiscUtil.getCurrentRequest()).thenReturn(request);

        RedisCacheHelper redisCacheHelper = PowerMockito.mock(RedisCacheHelper.class);
        ApplicationContext context = PowerMockito.mock(ApplicationContext.class);
        when(context.getBean(RedisCacheHelper.class)).thenReturn(redisCacheHelper);
        AuditTrailHelper.auditFunction("UnitTest","testAuditFunction");
        Assert.assertTrue(true);
    }

    @Test(expected = IllegalStateException.class)
    public void testConstructor() throws NoSuchMethodException, IllegalAccessException,
            InvocationTargetException, InstantiationException {
        Class cls = AuditTrailHelper.class;
        Constructor<AuditTrailHelper> con = cls.getDeclaredConstructor(null);
        con.setAccessible(true);
        con.newInstance(null);
    }
}
