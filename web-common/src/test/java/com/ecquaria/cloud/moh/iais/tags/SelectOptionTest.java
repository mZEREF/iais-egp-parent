/*
 *   This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.tags;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.powermock.api.mockito.mockpolicies.Slf4jMockPolicy;
import org.powermock.core.classloader.annotations.MockPolicy;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

/**
 * SelectOptionTest
 *
 * @author suocheng
 * @date 8/6/2019
 */
@RunWith(PowerMockRunner.class)
@MockPolicy(Slf4jMockPolicy.class)
@PrepareForTest({SelectOption.class})
public class SelectOptionTest {
    @InjectMocks
    private SelectOption selectOption ;

    @Before
    public void setup(){
        selectOption.setText("text");
        selectOption.setValue("value");
    }

    @Test
    public void testEquals(){
//        boolean equals0 =  selectOption.equals(selectOption);
//        Assert.assertTrue(equals0);
        boolean equals1 =  selectOption.equals(null);
        Assert.assertFalse(equals1);
        boolean equals2 =  selectOption.equals("Test");
        Assert.assertFalse(equals2);
        selectOption.setText(null);
        boolean equals3 =  selectOption.equals(new SelectOption("value","text"));
        Assert.assertFalse(equals3);
        selectOption.setText("text");
        boolean equals4 =  selectOption.equals(new SelectOption("value","text0"));
        Assert.assertFalse(equals4);
        selectOption.setValue(null);
        boolean equals5 =  selectOption.equals(new SelectOption("value","text"));
        Assert.assertFalse(equals5);
        selectOption.setValue("value");
        boolean equals6 =  selectOption.equals(new SelectOption("value","text0"));
        Assert.assertFalse(equals6);
    }
    @Test
    public void testHashCode(){
        int hashCode = selectOption.hashCode();
        Assert.assertTrue(true);
    }
    @Test
    public void testCompareTo(){
        int compare = selectOption.compareTo(new SelectOption("text1","value1"));
        Assert.assertTrue(true);
    }

    @Test
    public void testGet(){
        String text = selectOption.getText();
        Assert.assertEquals("text",text);
        String value = selectOption.getValue();
        Assert.assertEquals("value",value);
    }


}
