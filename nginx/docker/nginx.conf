user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent $request_length "$http_referer" "$http_user_agent" $request_time $upstream_response_time';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    gzip on;
	gzip_min_length 1k;
	gzip_buffers 4 16k;
	#gzip_http_version 1.0;
	gzip_comp_level 2;
	gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	gzip_vary off;
	gzip_disable "MSIE [1-6]\.";

    keepalive_timeout  65;
    
    client_max_body_size 50m;
    proxy_read_timeout 300;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    underscores_in_headers on;
    server_tokens off;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    server {
        listen          80;
        server_name  		engine-services;
		
        resolver 127.0.0.11 valid=5s;
        set $egov "egov-app";
        location = / {
            proxy_pass http://$egov:8080/egov;
        }

        set $web "web";
        location /web {
            proxy_pass http://$web:8080;
        }

        set $cc "cc-app";
        location /cc {
            proxy_pass http://$cc:8080;
        }

        set $cr "cr-eservice";
        location /cr {
            proxy_pass http://$cr:8080;
        }
        set $demo "demo-eservice";
        location /demo {
            proxy_pass http://$demo:8080;
        }
        set $bsalic "bsalic-eservice";
        location /bsalic {
            proxy_pass http://$bsalic:8080;
        }

        location /egov {
            proxy_pass http://$egov:8080;
        }

        set $nas "nas-app";
        location /nas {
            proxy_pass http://$nas:8080;
        }

        set $console "console";
        location /console {
            proxy_pass http://$console:8080;
        }

        location /filerepo {
            proxy_pass http://file-repo-service:8884;
        }

        #set $application-service "application-service";
       # location /application-service {
        #    proxy_pass http://$application-service:9099;
       # }
    }

    server {
        listen       443 ssl;
        server_name  engine-services-https;

        ssl on;

        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

        proxy_redirect http:// $scheme://;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

        resolver 127.0.0.11 valid=5s;
        set $egov "egov-app";
        location = / {
            proxy_pass http://$egov:8080/egov;
        }

        set $web "web";
        location /web {
            proxy_pass http://$web:8080;
        }

        set $cc "cc-app";
        location /cc {
            proxy_pass http://$cc:8080;
        }

        set $cr "cr-eservice";
        location /cr {
            proxy_pass http://$cr:8080;
        }
        set $demo "demo-eservice";
        location /demo {
            proxy_pass http://$demo:8080;
        }
        set $bsalic "bsalic-eservice";
        location /bsalic {
            proxy_pass http://$bsalic:8080;
        }

        set $nas "nas-app";
        location /nas {
            proxy_pass http://$nas:8080;
        }

        location /egov {
            proxy_pass http://$egov:8080;
        }

        set $console "console";
        location /console {
            proxy_pass http://$console:8080;
        }


        #set $application-service "application-service";
        #location /application-service {
        #    proxy_pass http://$application-service:9099;
        #}
    }

    # include /etc/nginx/conf.d/*.conf;
}
