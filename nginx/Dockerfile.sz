# This Dockerfile.sg is targeted to the build environment in SZ.
#
# Changes made against the original would be documented, as much as possible.

FROM nginx:1.11.1-alpine

ARG ALPINE_GLIBC_PACKAGE_VERSION=2.23-r3
ARG FILEBEAT_SRC_SHA1=3fde7f5f5ea837140965a193bbb387c131c16d9c
ARG FILEBEAT_VERSION=6.2.4

### Copy GNU libc
COPY nginx/docker/glibc/$ALPINE_GLIBC_PACKAGE_VERSION/ /tmp/
COPY nginx/docker/glibc/sgerrand.rsa.pub /etc/apk/keys/sgerrand.rsa.pub

### Copy Filebeat
COPY nginx/docker/filebeat/$FILEBEAT_VERSION/ /tmp/

### install GNU libc
RUN apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \
    apk add --no-cache \
        "/tmp/glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk" \
        "/tmp/glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk" \
        "/tmp/glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    \
    rm "/etc/apk/keys/sgerrand.rsa.pub" && \
    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true && \
    echo "export LANG=C.UTF-8" > /etc/profile.d/locale.sh && \
    \
    apk del glibc-i18n && \
    \
    rm \
        "/tmp/glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk" \
        "/tmp/glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk" \
        "/tmp/glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"

### install Filebeat

RUN set -ex \
  && apk --no-cache add --virtual .build-dependencies \
  \
 && cd /tmp \
  && tar -xzf /tmp/filebeat-$FILEBEAT_VERSION-linux-x86_64.tar.gz \
  \
  && cd filebeat-$FILEBEAT_VERSION-linux-x86_64 \
  && cp filebeat /bin \
  \
  && rm -rf /tmp/filebeat-*


### configure nginx

COPY nginx/docker/nginx.conf /etc/nginx/nginx.conf
COPY nginx/docker/server.crt /etc/nginx/server.crt
COPY nginx/docker/server.key /etc/nginx/server.key

### configure Filebeat

RUN rm /var/log/nginx/access.log /var/log/nginx/error.log

COPY nginx/docker/filebeat/filebeat.yml /etc/filebeat/filebeat.yml

# [CA Cert]
COPY nginx/docker/filebeat/logstash-beats.crt /etc/pki/tls/certs/logstash-beats.crt

RUN apk --no-cache update && \
    apk --no-cache upgrade && \
    apk add -U curl tzdata && \
    cp /usr/share/zoneinfo/Singapore /etc/localtime

### configure healthcheck

HEALTHCHECK --interval=1m --timeout=10s --retries=10 \
  CMD curl -f -k https://localhost/ || exit 1

### start

COPY nginx/docker/start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

CMD ["/bin/sh", "/usr/local/bin/start.sh"]