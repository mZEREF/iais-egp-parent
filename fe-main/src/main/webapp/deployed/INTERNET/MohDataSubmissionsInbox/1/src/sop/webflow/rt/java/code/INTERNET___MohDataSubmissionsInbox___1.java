/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import sop.webflow.rt.api.BaseProcessClass;
import com.ecquaria.cloud.helper.EngineHelper;

public class INTERNET___MohDataSubmissionsInbox___1 extends BaseProcessClass {
	private static final String DELEGATOR ="dataSubmissionInboxDelegator";
	public void start_OnStepProcess_0() throws Exception {
	// 		Start->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doStart", this);
	}

	public void prepare_OnStepProcess_0() throws Exception {
	// 		Prepare->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepare", this);
	}

	public void actionData_OnStepProcess_0() throws Exception {
	// 		ActionData->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "actionData", this);
	}

	public void search_OnStepProcess_0() throws Exception {
	// 		Search->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "search", this);
	}

	public void page_OnStepProcess_0() throws Exception {
	// 		Page->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "page", this);
	}

	public void sort_OnStepProcess_0() throws Exception {
	// 		Sort->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "sort", this);
	}

	public void deleteDraft_OnStepProcess_0() throws Exception {
	// 		DeleteDraft->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "deleteDraft", this);
	}

	public void view_OnStepProcess_0() throws Exception {
	// 		View->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "view", this);
	}

	public void rFC_OnStepProcess_0() throws Exception {
	// 		RFC->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doRFC", this);
	}

	public void withdraw_OnStepProcess_0() throws Exception {
	// 		Withdraw->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "withdraw", this);
	}

	public void unlock_OnStepProcess_0() throws Exception {
	// 		Unlock->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "unlock", this);
	}

}
