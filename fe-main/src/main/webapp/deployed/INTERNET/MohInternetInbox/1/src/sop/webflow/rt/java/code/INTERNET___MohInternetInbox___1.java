/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;

import sop.webflow.rt.api.BaseProcessClass;

public class INTERNET___MohInternetInbox___1 extends BaseProcessClass {
	
	private static final String DELEGATOR ="interInboxDelegator";

	public void start_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "start", this);
	}

	public void prepareDate_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareDate", this);
	}

	public void prepareSwitch_OnStepProcess_0() throws Exception {
	// 		prepareSwitch->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareSwitch", this);
	}
	

	/**
	 * @throws Exception
	 * 
	 * Message Action
	 */
	
	public void toMsgPage_OnStepProcess_0() throws Exception {
	// 		toMsgPage->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "toMsgPage", this);
	}
	
	public void doSearch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "msgDoSearch", this);
	}

	public void doPage_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "msgDoPage", this);
	}

	public void doSort_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "msgDoSort", this);
	}

	public void msgToArchive_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "msgToArchive", this);
		}

	public void msgViewStep_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "msgViewStep", this);
	}

	public void msgToView_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "msgToView", this);
	}

	/**
	 * 
	 * @throws Exception
	 * 
	 * Licence Action
	 */

	public void toLicencePage_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "toLicencePage", this);
	}

	public void licSwitch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licSwitch", this);
	}

	public void licDoPage_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoPage", this);
	}

	public void licDoSort_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoSort", this);
	}
	
	public void licDoSearch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoSearch", this);
	}

	public void licDoCease_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoCease", this);
	}
	
	public void licDoAmend_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoAmend", this);
	}
	public void licDoRenew_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoRenew", this);
	}
	public void licDoAppeal_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licDoAppeal", this);
	}

	public void licToView_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "licToView", this);
	}
	/**
	 * 
	 * @throws Exception
	 * 
	 * Application Action
	 */
	public void toAppPage_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "toAppPage", this);
	}
	
	public void appSwitch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appSwitch", this);
	}
	
	public void appDoSearch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoSearch", this);
	}

	public void appDoPage_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoPage", this);
	}

	public void appDoSort_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoSort", this);
	}

	public void appDoRenew_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoWithDraw", this);
	}

	public void appDoDraft_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoDraft", this);
	}

	public void appDoAppeal_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoAppeal", this);
	}

	public void appDoRecall_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoRecall", this);
	}

	public void appDoDelete_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoDelete", this);
	}

	public void appDoReload_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "appDoReload", this);
	}

	public void initToPage_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "initToPage", this);
	}

	
	

}
