<?xml version="1.0" encoding="UTF-8"?>
<sqls catalog="interInboxQuery">
    <sql key = "inboxQuery" remarks = "Query Inter-Inbox Data by condition">
        <![CDATA[
            SELECT
                inbox.id,
                inbox.src_system_id,
                inbox.subject,
                inbox.message_type,
                inbox.ref_no,
                inbox.service_codes,
                inbox.msg_content,
                inbox.status,
                inbox.user_id,
                inbox.created_dt
            FROM INBOX_MSG AS inbox
            WHERE 1=1
            <#if id??> AND CHARINDEX(:id, inbox.id) >0</#if>
            <#if msgSubject??> AND CHARINDEX(:msgSubject, inbox.subject) >0 </#if>
            <#if userId??> AND inbox.user_id = :userId</#if>
            <#if msgStatus??> AND inbox.status in :msgStatus</#if>
            <#if messageType??> AND inbox.message_type = :messageType</#if>
            <#if interService??> AND CHARINDEX(:interService, inbox.service_codes) >0 </#if>
        ]]>
    </sql>

    <sql key = "assessmentWithdrawAppQuery" remarks = "Query Inter-Application Data by condition">
        <![CDATA[
            SELECT * FROM (SELECT
                id,
                application_no,
                app_grp_id,
                '' as pmtStatus,
                (select LICENSEE_ID from application_group as ag where ag.ID =  app.APP_GRP_ID) as licensee_id,
                has_submit_pref_date,
                app_type,
                status,
                service_id,
                repalceService as code,
                self_assmt_flag,
                is_fast_tracking,
                created_dt,
                version,NULL as misc_app_id,NULL as IS_AUTO_APPROVE
            FROM APPLICATION AS app where app.app_type in ('APTY001','APTY005','APTY002')) AS wapp
            WHERE wapp.status in ('APST001','APST003','APST004','APST007','APST010','APST011','APST012','APST013','APST014','APST021',
                                    'APST023','APST027','APST028','APST029','APST031','APST032','APST033','APST034','APST039','APST040',
                                    'APST041','APST048','APST049','APST061','APST062','APST063','APST064','APST065','APST066','APST067',
                                    'APST068','APST069','APST070','APST071','APST077','APST090','APST091','APST092','APST037','APST019',
                                    'APST020','APST022')
            <#if licenseeId??> AND wapp.licensee_id = :licenseeId</#if>
            <#if createDtStart??> AND wapp.created_dt > :createDtStart</#if>
        ]]>
    </sql>

    <sql key = "applicationQuery" remarks = "Query Inter-Application Data by condition">
        <![CDATA[
           SELECT * FROM (
         SELECT B.*,AG.IS_AUTO_APPROVE as IS_AUTO_APPROVE
            FROM (SELECT
                    app.id,
                    app.application_no,
                    app.has_submit_pref_date,
                    app.app_grp_id,
                    (select LICENSEE_ID from application_group as ag where ag.ID =  app.APP_GRP_ID) as licensee_id,
                    (select PMT_STATUS from application_group as ag where ag.ID =  app.APP_GRP_ID) as pmtStatus,
                    app.app_type,
                    app.status,
                    app.service_id,
                    repalceService  as code,
                    app.self_assmt_flag,
                    app.is_fast_tracking,
                    (select CREATED_DT from application_group as ag where ag.ID =  app.APP_GRP_ID) as created_dt,
                    app.version ,misc.misc_id misc_app_id
                FROM APPLICATION AS app
                join (select application_no,MAX(version) as version from application GROUP BY application_no) as app2
                on app.APPLICATION_NO = app2.application_no and app.version = app2.version
                LEFT join (select base_app.id misc_id  from
                  app_premises_misc apm
                 join app_premises_correlation apc on apc.ID = apm.APP_PREM_CORRE_ID
                  JOIN application corr_app on corr_app.ID = apc.APPLICATION_ID and corr_app.STATUS not in ('APST009','APST050','APST006')
                 JOIN application base_app on base_app.APPLICATION_NO = corr_app.BASE_APPLICATION_NO
                 where  apm.APPEAL_TYPE in ('APPEAL001','APPEAL002','APPEAL006')
                ) as misc  on misc.misc_id = app.id
                union
                select
                    A.ID as id,A.DRAFT_NO AS application_no,1 as has_submit_pref_date,A.app_grp_id,A.licensee_id,'PMTDF001',A.app_type,
                    (case A.status when 'CMSTAT001' then 'APST008' else 'APST093' end) as status,NULL as service_id,A.SERVICE_CODES as code,null,null,A.CREATED_DT,1,null
                from
                    app_grp_submission_draft AS A
                where  A.status = 'CMSTAT001' or A.status='DRAFT001') AS B LEFT join application_group AG on B.app_grp_id =AG.ID
             WHERE B.STATUS != 'CMSTAT002' AND B.STATUS !='APST009'
             AND B.STATUS !='APST051' AND B.STATUS != 'APST072'
             AND B.STATUS != 'APST074'
             AND B.STATUS != 'APST073'
             AND B.STATUS != 'APST079'
             AND B.STATUS != 'APST080'
             AND B.STATUS != 'APST081'
             AND B.STATUS != 'APST083'
             AND B.APP_TYPE != 'APTY007'
            <#if id??> AND CHARINDEX(:id,B.app.id) >0</#if>
            <#if appType??> AND B.app_type = :appType</#if>
            <#if licenseeId??> AND B.licensee_id = :licenseeId</#if>
            <#if serviceType??> AND B.service_id = :serviceType</#if>
            <#if appNo??> AND CHARINDEX(:appNo, B.application_no) >0 </#if>
            <#if appStatus??> AND ${appStatus}</#if>
            <#if service_id??> AND (${service_id} OR CHARINDEX(:serviceCode, B.code) >0) </#if>
            <#if createDtStart??> AND B.created_dt > :createDtStart</#if>
            <#if serviceCode??> AND CHARINDEX(:serviceCode, B.code) >0 </#if>
            <#if createDtEnd??> AND B.created_dt < :createDtEnd</#if>
            ) a
        ]]>
    </sql>

    <sql key = "licenceQuery" remarks = "Query Inter-Licence Data by condition">
        <![CDATA[
             SELECT DISTINCT
                lic.id,
                lic.licence_no,
                lic.svc_name,
                lic.licensee_id,
                lic.status,
                lic.start_date,
                lic.expiry_date,
                ltrim(case
                    when p3.premCount < '2' then
                        CONCAT(p.BLK_NO ,
                           case p.STREET_NAME
                              when null then null
                              when '' then null
                              else ' '+p.STREET_NAME end
                           , case p.BUILDING_NAME
                              when null then null
                              when '' then null
                              else ' '+p.BUILDING_NAME end
                           , case p.FLOOR_NO
                              when null then null
                              when '' then null
                              else ' # '+p.FLOOR_NO end
                           , case p.UNIT_NO
                              when null then null
                              when '' then null
                              else '-'+p.UNIT_NO end
                           , case p.POSTAL_CODE
                              when null then null
                              when '' then null
                              else ', '+p.POSTAL_CODE end
                          )
                    else 'multi' end
                    ) as address
                FROM LICENCE AS lic
                JOIN lic_premises lp on lp.LICENCE_ID  = lic.ID
                JOIN premises p on p.ID  = lp.PREMISES_ID
                JOIN (
                	select count(*) as premCount,lp2.LICENCE_ID from lic_premises lp2
                	JOIN premises p2 on lp2.PREMISES_ID = p2.ID GROUP  by lp2.LICENCE_ID
                )p3 on lic.id = p3.licence_id
            WHERE 1=1
            <#if id??> AND CHARINDEX(:id, lic.id) >0</#if>
            <#if serviceType??> AND lic.svc_name = :serviceType</#if>
            <#if licStatus??> AND lic.status = :licStatus</#if>
            <#if licenseeId??> AND lic.licensee_id = :licenseeId</#if>
            <#if fStartDate??> AND lic.start_date >= :fStartDate</#if>
            <#if eStartDate??> AND lic.start_date <= :eStartDate</#if>
            <#if fExpiryDate??> AND lic.expiry_date >= :fExpiryDate</#if>
            <#if eExpiryDate??> AND lic.expiry_date <= :eExpiryDate</#if>
            <#if licNo??> AND CHARINDEX(:licNo, lic.licence_no) >0 </#if>
        ]]>
    </sql>

    <sql  key = "feUserList" remarks = "Query user admin ">
        <![CDATA[
            SELECT DISTINCT
               acc.ID,
               acc.DISPLAY_NAME,
               acc.SALUTATION,
               acc.ID_TYPE,
               acc.ID_NO,
               acc.DESIGNATION,
               acc.OTHER_DESIGNATION,
               acc.STATUS,
               role.ROLE_ID
           FROM user_account acc
           JOIN organization org ON acc.ORGANIZATION_ID = org.ID
           JOIN user_role role ON acc.ID = role.USER_ACCT_ID
           where role.STATUS != 'CMSTAT002' and acc.STATUS != 'CMSTAT002'
           <#if orgid??>AND org.ID = :orgid</#if>
           <#if roleid??>AND role.ROLE_ID = :roleid</#if>
        ]]>
    </sql>
    <sql remarks="Query" key="queryPremises">
        <![CDATA[
         SELECT lp.ID as LIC_PREMISE_ID, li.ID as LICENCE_ID,li.LICENCE_NO as LICENCE_NO,li.STATUS as LICENCE_STATUS, li.SVC_NAME as SVC_NAME,
                p.ID as PREMISES_ID, p.HCI_CODE , p.HCI_NAME, p.HCI_CONTACT_NO, p.SCDF_REF_NO,
                 p.CERT_ISSUED_DT, p.VEHICLE_NO, p.PREMISES_TYPE, p.POSTAL_CODE, p.ADDR_TYPE,
                  p.BLK_NO, p.FLOOR_NO, p.UNIT_NO, p.STREET_NAME, p.BUILDING_NAME, p.VERSION,
                   p.STATUS, ltrim(CONCAT(p.BLK_NO ,
                       case p.STREET_NAME
                          when null then null
                          when '' then null
                          else ' '+p.STREET_NAME end
                       , case p.BUILDING_NAME
                          when null then null
                          when '' then null
                          else ' '+p.BUILDING_NAME end
                       , case p.FLOOR_NO
                          when null then null
                          when '' then null
                          else ' # '+p.FLOOR_NO end
                       , case p.UNIT_NO
                          when null then null
                          when '' then null
                          else '-'+p.UNIT_NO end
                       , case p.POSTAL_CODE
                          when null then null
                          when '' then null
                          else ', '+p.POSTAL_CODE end ))
	               as address,p.ORGANIZATION_ID FROM
                   licence as li  join lic_premises lp on li.ID = lp.LICENCE_ID
                   join premises p on lp.PREMISES_ID = p.ID WHERE 1 = 1 <#if licenseeId??>   and li.LICENSEE_ID =:licenseeId </#if>
                    and p.PREMISES_TYPE in ('ONSITE','OFFSITE','CONVEYANCE','EASMTS')
                    <#if premisesType??> and p.PREMISES_TYPE =:premisesType </#if>
                    and li.STATUS ='LICEST001' and p.ID in (
                           SELECT  MAX(li.PREMISES_ID) FROM
                   lic_premises as li WHERE li.LICENCE_ID in
                   (SELECT b.ID FROM licence as b WHERE b.STATUS='LICEST001'
                    <#if licenseeId??> and b.LICENSEE_ID =:licenseeId </#if>)GROUP by li.LICENCE_ID)

            ]]>
    </sql>
    <sql key = "appPersonnelQuery" remarks = "Query Application Data by condition">
        <![CDATA[
            SELECT DISTINCT T3.ID,T3.SVC_NAME,T3.LICENCE_NO
                FROM key_personnel T1
                join lic_key_personnel T2 on T1.ID = T2.PERSON_ID
                join licence T3 on t2.LICENCE_ID = t3.ID
                AND t3.STATUS = 'LICEST001'
			    <#if licenseeId??>AND t3.LICENSEE_ID =:licenseeId</#if>
			    <#if idNo??> AND T1.ID_NO =:idNo</#if>
        ]]>
    </sql>
    <sql key="getLicenceBySerName" remarks="getLicenceBySerName">
        <![CDATA[
        select ID,LICENCE_NO,SVC_NAME,START_DATE,POSTAL_CODE,BLK_NO,FLOOR_NO,UNIT_NO,STREET_NAME,BUILDING_NAME,EXPIRY_DATE,HCI_NAME,VEHICLE_NO,PREMISES_TYPE,ORDER_INDEX from (
            SELECT  top(1) ID,
                    '' as LICENCE_NO,
                    'first' as SVC_NAME,
                    '' as START_DATE,
                    '' as POSTAL_CODE,
                    '' as BLK_NO,
                    '' as FLOOR_NO,
                    '' as UNIT_NO,
                    '' as STREET_NAME,
                    '' as BUILDING_NAME,
                    '' as EXPIRY_DATE,
                    '' as HCI_NAME,
                    '' as VEHICLE_NO,
                    '' as PREMISES_TYPE,
                    '0' as ORDER_INDEX
                    from LICENCE
            UNION
            SELECT  T3.ID,
                    T1.LICENCE_NO,
                    T1.SVC_NAME,
                    T1.START_DATE,
                    T3.POSTAL_CODE,
                    T3.BLK_NO,
                    T3.FLOOR_NO,
                    T3.UNIT_NO,
                    T3.STREET_NAME,
                    T3.BUILDING_NAME,
                    T1.EXPIRY_DATE,
                    T3.HCI_NAME ,
                    T3.VEHICLE_NO,
                    T3.PREMISES_TYPE,
                    '1' as ORDER_INDEX
              FROM LICENCE T1
              JOIN LIC_PREMISES T2 on T2.LICENCE_ID = T1.id
              JOIN PREMISES T3 on T2.PREMISES_ID = T3.id
              where T1.status in ('LICEST001')
              <#if serName??> and T1.SVC_NAME IN ${serName} </#if>
              <#if licenseeId??> AND T1.LICENSEE_ID = :licenseeId</#if>
              <#if premTypeList??>AND T3.PREMISES_TYPE IN ${premTypeList}</#if>
              <#if alignMinExpiryMonth??>AND DATEDIFF(MONTH ,getDate(),T1.EXPIRY_DATE) >= :alignMinExpiryMonth</#if>
             )tab1 order by tab1.ORDER_INDEX ASC
        ]]>
    </sql>

    <sql key = "dataSubmissionQuery" remarks = "Query data Submission Inter-Inbox Data by condition">
        <![CDATA[
          SELECT t1.*,t2.BUSINESS_NAME FROM (
           SELECT dds.ID as ID,dc.HCI_CODE HCI_CODE,dc.DS_TYPE [TYPE],dds.STATUS STATUS,dds.SUBMISSION_NO SUBMISSION_NO,dds.SUBMIT_DT SUBMIT_DT,dds.CREATED_DT CREATED_DT ,dds.CYCLE_STAGE  CYCLE_STAGE,dds.SUBMISSION_TYPE SUBMISSION_TYPE FROM  ds_cycle dc
           left join  ds_data_submission dds
           on dc.ID  = dds.CYCLE_ID WHERE  dds.STATUS != 'DS002'
           UNION
           SELECT ddsd.ID ID,ddsd.HCI_CODE HCI_CODE,ddsd.DS_TYPE [TYPE],ddsd.STATUS STATUS,ddsd.DRAFT_NO SUBMISSION_NO,ddsd.CREATED_DT SUBMIT_DT,ddsd.CREATED_DT CREATED_DT,ddsd.SUBMISSION_STAGE CYCLE_STAGE ,ddsd.SUBMISSION_TYPE SUBMISSION_TYPE
           FROM ds_data_submission_draft ddsd WHERE STATUS = 'CMSTAT001'
           ) t1
          left join (
          select DISTINCT p.HCI_CODE HCI_CODE,lp.BUSINESS_NAME BUSINESS_NAME FROM  premises p
          left join  lic_premises lp
          on p.ID = lp.PREMISES_ID
          left join licence
          on  lp.LICENCE_ID = licence.ID
          WHERE licence.STATUS = 'LICEST001' AND p.STATUS= 'CMSTAT001') t2  on t1.HCI_CODE = t2.HCI_CODE
          WHERE 1=1
          <#if type??> and t1.[type] = :type </#if>
          <#if submissionNo??> and t1.SUBMISSION_NO = :submissionNo</#if>
          <#if status ??> and t1.STATUS = :status</#if>
        ]]>
    </sql>
</sqls>