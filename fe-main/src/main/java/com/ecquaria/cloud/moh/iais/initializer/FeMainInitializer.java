/*
 * This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.initializer;

import com.ecquaria.cloud.helper.SpringContextHelper;
import com.ecquaria.cloud.moh.iais.common.config.SystemParamConfig;
import com.ecquaria.cloud.moh.iais.common.utils.StringUtil;
import com.ecquaria.cloud.moh.iais.helper.FileUtils;
import com.ecquaria.cloud.moh.iais.service.client.SystemAdminMainFeClient;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.context.support.WebApplicationContextUtils;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.annotation.WebListener;
import java.io.File;
import java.io.IOException;

/**
 * AppInitializer
 *
 * @author Jinhua
 * @date 2019/7/18 18:03
 */
@WebListener
@Slf4j
public class FeMainInitializer implements ServletContextListener {
    @Override
    public void contextDestroyed(ServletContextEvent sce) {
        // Nothing to do
    }

    @Override
    public void contextInitialized(ServletContextEvent sce) {
        copySpConfigProperties();
    }

    private void copySpConfigProperties(){
        try {
            SystemAdminMainFeClient client = SpringContextHelper.getContext().getBean(SystemAdminMainFeClient.class);
            String runtimeEnv = client.getValueByPropertiesKey("iais.runtime.env").getEntity();

            log.info(StringUtil.changeForLog("fe main runtimeEnv" + runtimeEnv));

            String resourcePath = this.getClass().getResource("/").getPath();
            File resource = new File(resourcePath);
            String srcPath = resource.getParentFile().getParentFile().getParentFile().getParentFile().getAbsolutePath();
            FileUtils.copyFilesToOtherPosition(srcPath + "/configs/" + runtimeEnv, resourcePath);
        } catch (IOException e) {
            log.error(e.getMessage(), e);
        }
    }

}
