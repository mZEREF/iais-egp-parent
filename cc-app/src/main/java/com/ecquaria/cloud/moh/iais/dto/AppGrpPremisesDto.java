/*
 *   This file is generated by ECQ project skeleton automatically.
 *
 *   Copyright 2019-2049, Ecquaria Technologies Pte Ltd. All rights reserved.
 *
 *   No part of this material may be copied, reproduced, transmitted,
 *   stored in a retrieval system, reverse engineered, decompiled,
 *   disassembled, localised, ported, adapted, varied, modified, reused,
 *   customised or translated into any language in any form or by any means,
 *   electronic, mechanical, photocopying, recording or otherwise,
 *   without the prior written permission of Ecquaria Technologies Pte Ltd.
 */

package com.ecquaria.cloud.moh.iais.dto;

import com.ecquaria.cloud.moh.iais.common.constant.ApplicationConsts;
import com.ecquaria.cloud.moh.iais.common.dto.AuditTrailDto;
import lombok.Getter;
import lombok.Setter;
import net.sf.oval.constraint.NotBlank;
import net.sf.oval.constraint.NotNull;

import java.io.Serializable;

/**
 * AppGrpPremisesDto
 *
 * @author suocheng
 * @date 9/26/2019
 */

@Getter @Setter
public class AppGrpPremisesDto implements Serializable {
    private static final long serialVersionUID = 2152082123293571140L;

    private String id;

    // do not user in the page
    private String hciCode;

    private String premisesSelect;

    private String appGrpId;

    //What is your premises type?
    @NotNull(message = "can not is null!", profiles = {"create", "edit"})
    @NotBlank(message = "can not is blank!", profiles = {"create", "edit"})
    private String premisesType;

    //======================
    //for the On-site
    //======================
    //Name of premises
    private String hciName;

     //Postal Code
     @NotNull(message = "can not is null!", profiles = {"create", "edit"})
     @NotBlank(message = "can not is blank!", profiles = {"create", "edit"})
    private String postalCode;

    //Block / House No.
    private String blkNo;
     //Street Name
     @NotNull(message = "can not is null!", profiles = {"create", "edit"})
     @NotBlank(message = "can not is blank!", profiles = {"create", "edit"})
    private String streetName;
      //Floor No.
    private String floorNo;
     //Unit No.
    private String unitNo;
     //Building Name
    private String buildingName;
     //Address Type
    private String addrType;

    private String siteSafefyNo;

    //======================
    //for the Conveyance
    //======================

    //Vehicle No.
    private String conveyanceVehicleNo;
    private String conveyanceSalutation;
    private String conveyanceVehicleOwnerName;
    private String conveyancePostalCode;
    private String conveyanceBlockNo;
    private String conveyanceStreetName;
    private String conveyanceFloorNo;
    private String conveyanceUnitNo;
    private String conveyanceBuildingName;
    private String conveyanceAddressType;
    private String conveyanceEmail;
    private String conveyanceMobile;

    private AuditTrailDto auditTrailDto;

    private String address;

    public String getAddress(){
        String result = "";
        if(ApplicationConsts.PREMISES_TYPE_ON_SITE.equals(premisesType)){
            result = blkNo + " " +streetName + " " +buildingName +" # "+floorNo+"-"+unitNo+", " +postalCode;
        }else{
            result = conveyanceBlockNo + " " +conveyanceStreetName + " " +conveyanceBuildingName +" # "+conveyanceFloorNo+"-"+conveyanceUnitNo+", " +conveyancePostalCode;
        }
        return result;
    }

}
