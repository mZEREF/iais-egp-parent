/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;
import sop.webflow.rt.api.BaseProcessClass;

public class INTRANET___MohInspectionPreInspector___1 extends BaseProcessClass {

	private static final long serialVersionUID = -6186058982854929865L;
	private static final String DELEGATOR ="inspectionPreDelegator";

	public void inspectionPreInspectorStart_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorStart->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorStart", this);
	}

	public void inspectionPreInspectorInit_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorInit->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorInit", this);
	}

	public void inspectionPreInspectorPre_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorPre->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorPre", this);
	}

	public void inspectionPreInspectorStep1_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorStep1->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorStep1", this);
	}

	public void inspectionPreInspectorApprove_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorApprove->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorApprove", this);
	}

	public void inspectionPreInspectorRouteB_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorRouteB->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorRouteB", this);
	}

	public void inspectionPreInspectorSelf_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorSelf->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorSelf", this);
	}

	public void inspectionPreInspector_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspector->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspector", this);
	}

	public void inspectionPreInspectorBack_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorBack->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorBack", this);
	}

	public void inspectionPreInspectorRollBack_OnStepProcess_0() throws Exception {
	// 		InspectionPreInspectorRollBack->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionPreInspectorRollBack", this);
	}

}
