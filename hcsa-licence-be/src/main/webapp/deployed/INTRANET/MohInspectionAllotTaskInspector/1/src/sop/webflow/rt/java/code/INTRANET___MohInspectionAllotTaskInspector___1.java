/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;

import sop.webflow.rt.api.BaseProcessClass;

public class INTRANET___MohInspectionAllotTaskInspector___1 extends BaseProcessClass {

	private static final long serialVersionUID = -2845051794646361583L;
	private static final String DELEGATOR ="inspecAssignTaskDelegator";

	public void inspectionAllotTaskInspectorStart_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorStart->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorStart", this);
	}

	public void inspectionAllotTaskInspectorInit_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorInit->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorInit", this);
	}

	public void inspectionAllotTaskInspectorPre_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorPre->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorPre", this);
	}

	public void inspectionAllotTaskInspectorStep1_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorStep1->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorStep1", this);
	}

	public void inspectionAllotTaskInspectorAssign_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorAssign->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorAssign", this);
	}

	public void inspectionAllotTaskInspectorAction_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorAction->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorAction", this);
	}

	public void inspectionAllotTaskInspectorQuery_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorQuery->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorQuery", this);
	}

	public void inspectionAllotTaskInspectorSuccess_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorSuccess->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorSuccess", this);
	}

	public void inspectionAllotTaskInspectorConfirm_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorConfirm->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorConfirm", this);
	}

	public void inspectionAllotTaskInspectorQuery2_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorQuery2->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorQuery2", this);
	}

	public void inspectionAllotTaskInspectorSort_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorSort->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorSort", this);
	}

	public void inspectionAllotTaskInspectorPage_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorPage->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorPage", this);
	}

	public void inspectionAllotTaskInspectorSearch_OnStepProcess_0() throws Exception {
	// 		InspectionAllotTaskInspectorSearch->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "inspectionAllotTaskInspectorSearch", this);
	}

}
