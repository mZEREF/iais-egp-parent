/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;

import com.ecquaria.cloud.helper.EngineHelper;
import sop.webflow.rt.api.BaseProcessClass;

public class EGPCLOUD___ApplicationView___1 extends BaseProcessClass {

	public void prepareData_OnStepProcess_0() throws Exception {
//		ApplicationViewController.prepareData(request);
		EngineHelper.delegate("applicationViewDelegator", "prepareData", request);
		String caseid = request.getParameter("caseid");
		request.setAttribute("caseid", caseid);
	}

	public void email_OnStepProcess_0() throws Exception {
//		ApplicationViewController.sendEmail(request);
		EngineHelper.delegate("applicationViewDelegator", "sendEmail", request);
	}

	public void sMS_OnStepProcess_0() throws Exception {
//		ApplicationViewController.sendSMS(request);
		EngineHelper.delegate("applicationViewDelegator", "sendSMS", request);
	}

	public void updateMessageHistory_OnStepProcess_0() throws Exception {
//		ApplicationViewController.updateMessageHistory(request);
		EngineHelper.delegate("applicationViewDelegator", "updateMessageHistory", request);
	}

	public void uploadInternalDoc_OnStepProcess_0() throws Exception {
//		ApplicationViewController.uploadInternalDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "uploadInternalDoc", request);
	}

	public void bindAction_OnStepProcess_0() throws Exception {
//		ApplicationViewController.bindAction(request);
		EngineHelper.delegate("applicationViewDelegator", "bindAction", request);
	}

	public void delete_OnStepProcess_0() throws Exception {
//		ApplicationViewController.deleteInternalDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "deleteInternalDoc", request);
	}

	public void sortInternal_OnStepProcess_0() throws Exception {
//		ApplicationViewController.sortInternalDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "sortInternalDoc", request);
	}

	public void prepareDownload_OnStepProcess_0() throws Exception {
//		ApplicationViewController.downInternalDoc(request, response);
		EngineHelper.delegate("applicationViewDelegator", "downInternalDoc", request);
	}

	public void sortSupportDoc_OnStepProcess_0() throws Exception {
//		ApplicationViewController.sortSupportDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "sortSupportDoc", request);
	}

	public void prepareSupport_OnStepProcess_0() throws Exception {
//		ApplicationViewController.downSupportDoc(request, response);
		EngineHelper.delegate("applicationViewDelegator", "downSupportDoc", request);
	}

	public void prepareDownloadFormAsPDF_OnStepProcess_0() throws Exception {
//		ApplicationViewController.downFormAsPDF(request, response);
		EngineHelper.delegate("applicationViewDelegator", "downFormAsPDF", this);
	}

	public void uploadSupportDoc_OnStepProcess_0() throws Exception {
//		ApplicationViewController.uploadSupportDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "uploadSupportDoc", request);
	}

	public void deleteSupportDoc_OnStepProcess_0() throws Exception {
//		ApplicationViewController.deleteSupportDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "deleteSupportDoc", request);
	}

	public void validateUpdateStatus_OnStepProcess_0() throws Exception {
//		ApplicationViewController.validateUpdateStatus(request);
		EngineHelper.delegate("applicationViewDelegator", "validateUpdateStatus", request);
	}

	public void updateSupportDoc_OnStepProcess_0() throws Exception {
	// 		UpdateSupportDoc->OnStepProcess
//		ApplicationViewController.updateSupportDoc(request);
		EngineHelper.delegate("applicationViewDelegator", "updateSupportDoc", request);
	}

	public void supportDocHistory_OnStepProcess_0() throws Exception {
	// 		SupportDocHistory->OnStepProcess
//		ApplicationViewController.supportDocHistory(request);
		EngineHelper.delegate("applicationViewDelegator", "supportDocHistory", request);
	}

	public void start_OnStepProcess_0() throws Exception {
		//		Start->OnStepProcess
		EngineHelper.delegate("applicationViewDelegator", "init", this);
	}

}
