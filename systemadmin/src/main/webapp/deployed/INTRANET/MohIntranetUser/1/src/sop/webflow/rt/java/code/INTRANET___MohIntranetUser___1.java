/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;
import sop.webflow.rt.api.BaseProcessClass;

public class INTRANET___MohIntranetUser___1 extends BaseProcessClass {

	private static final long serialVersionUID = 5944392232160328038L;
	private static final String DELEGATOR ="IntranetUser";
	
	public void start_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "start", this);
	}
	public void prepareData_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareData", this);
	}
	public void prepareSwitch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareSwitch", this);
	}
	public void prepareCreate_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareCreate", this);
	}
	public void doCreate_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doCreate", this);
	}
	public void prepareEdit_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareEdit", this);
	}
	public void doEdit_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doEdit", this);
	}
	public void doDelete_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doDelete", this);
	}
	public void doSearch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doSearch", this);
	}
	public void doSorting_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doSorting", this);
	}
	public void doPaging_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doPaging", this);
	}
	public void doStatus_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "changeStatus", this);
	}
	public void doChange_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "saveStatus", this);
	}
	public void port_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doExport", this);
	}
	public void import_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "doImport", this);
	}
	public void back_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "importBack", this);
	}
	public void prepareRole_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareAddRole", this);
	}
	public void doAddRole_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "addRole", this);
	}
	public void prepareImportAck_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "prepareImportAck", this);
	}
	public void importSubmit_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "importSubmit", this);
	}
	public void importSwitch_OnStepProcess_0() throws Exception {
		EngineHelper.delegate(DELEGATOR, "importSwitch", this);
	}
	public void importUserRole_OnStepProcess_0() throws Exception {
	// 		importUserRole->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "importUserRole", this);
	}
	public void exportUserRole_OnStepProcess_0() throws Exception {
	// 		exportUserRole->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "exportUserRole", this);
	}

}
