/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import sop.webflow.rt.api.BaseProcessClass;
import com.ecquaria.cloud.helper.EngineHelper;

public class INTRANET___MohBsbAdhocInspection___1 extends BaseProcessClass {
	private static final String DELEGATOR ="adhocInspectionDelegator";

	public void start_OnStepProcess_0() throws Exception {
	// 		Start->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "start", this);
	}

	public void prepareSwitch_OnStepProcess_0() throws Exception {
	// 		PrepareSwitch->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareSwitch", this);
	}

	public void prepareList_OnStepProcess_0() throws Exception {
	// 		PrepareList->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareList", this);
	}

	public void handleList_OnStepProcess_0() throws Exception {
	// 		HandleList->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "handleList", this);
	}

	public void search_OnStepProcess_0() throws Exception {
	// 		Search->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "search", this);
	}

	public void sort_OnStepProcess_0() throws Exception {
	// 		Sort->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "sort", this);
	}

	public void page_OnStepProcess_0() throws Exception {
	// 		Page->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "page", this);
	}

	public void prepareAdhocInspection_OnStepProcess_0() throws Exception {
	// 		PrepareAdhocInspection->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareAdhocInspection", this);
	}

	public void handleAdhocInspection_OnStepProcess_0() throws Exception {
	// 		HandleAdhocInspection->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "handleAdhocInspection", this);
	}

	public void prepareAck_OnStepProcess_0() throws Exception {
	// 		PrepareAck->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareAck", this);
	}

	public void handleAck_OnStepProcess_0() throws Exception {
	// 		HandleAck->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "handleAck", this);
	}

}
