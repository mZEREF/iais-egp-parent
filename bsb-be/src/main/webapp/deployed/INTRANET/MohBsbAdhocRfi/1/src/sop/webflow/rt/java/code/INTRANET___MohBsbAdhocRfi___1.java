/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import com.ecquaria.cloud.helper.EngineHelper;

import sop.webflow.rt.api.BaseProcessClass;

public class INTRANET___MohBsbAdhocRfi___1 extends BaseProcessClass {
	private static final String DELEGATOR = "bsbAdhocRfiDelegator";

	public void step1_OnStepProcess_0() throws Exception {
	// 		Strat->OnStepProcess
		 EngineHelper.delegate(DELEGATOR, "doStart", this);
	}

	public void preAdhocRfi_OnStepProcess_0() throws Exception {
	// 		PreAdhocRfi->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "preAdhocRfi", this);
	}

	public void doAdhocRfi_OnStepProcess_0() throws Exception {
	// 		DoAdhocRfi->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doAdhocRfi", this);
	}

	public void preNewAdhocRfi_OnStepProcess_0() throws Exception {
	// 		PreNewAdhocRfi->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "preNewAdhocRfi", this);
	}

	public void doGreateRfi_OnStepProcess_0() throws Exception {
	// 		DoGreateRfi->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doGreateRfi", this);
	}

	public void preViewAdhocRfi_OnStepProcess_0() throws Exception {
	// 		PreViewAdhocRfi->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "preViewAdhocRfi", this);
	}

	public void doUpdate_OnStepProcess_0() throws Exception {
	// 		DoUpdate->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doUpdate", this);
	}

	public void doCancel_OnStepProcess_0() throws Exception {
	// 		DoCancel->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doCancel", this);
	}

	public void page_OnStepProcess_0() throws Exception {
	// 		Page->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doPaging", this);
	}

	public void sort_OnStepProcess_0() throws Exception {
	// 		Sort->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doSort", this);
	}

	public void validate_OnStepProcess_0() throws Exception {
	// 		Validate->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "doValidate", this);
	}

}
