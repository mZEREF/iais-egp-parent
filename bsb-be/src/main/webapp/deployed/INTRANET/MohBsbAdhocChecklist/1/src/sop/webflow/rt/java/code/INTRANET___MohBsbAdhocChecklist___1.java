/**
 * Generated by SIT
 *
 * Feel free to add  methods  or comments. The content of this 
 * file will be kept as-is when committed.
 *
 * Extending this  class is not recommended , since the class-
 * name will change together with the version. Calling methods
 * from external code is not recommended as well , for similar
 * reasons.
 */
package sop.webflow.rt.java.code;
import sop.webflow.rt.api.BaseProcessClass;
import com.ecquaria.cloud.helper.EngineHelper;

public class INTRANET___MohBsbAdhocChecklist___1 extends BaseProcessClass {
	private static final String DELEGATOR ="MohBsbAdhocChecklistDelegator";

	public void start_OnStepProcess_0() throws Exception {
	// 		start->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "start", this);
	}

	public void prepareDisplay_OnStepProcess_0() throws Exception {
	// 		prepareDisplay->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareDisplay", this);
	}

	public void displayAction_OnStepProcess_0() throws Exception {
	// 		displayAction->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "displayAction", this);
	}

	public void prepareItemPool_OnStepProcess_0() throws Exception {
	// 		prepareItemPool->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "prepareItemPool", this);
	}

	public void removeAdhocItem_OnStepProcess_0() throws Exception {
	// 		removeAdhocItem->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "removeAdhocItem", this);
	}

	public void cancel_OnStepProcess_0() throws Exception {
	// 		cancel->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "cancel", this);
	}

	public void saveAdhocItem_OnStepProcess_0() throws Exception {
	// 		saveAdhocItem->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "saveAdhocItem", this);
	}

	public void changePage_OnStepProcess_0() throws Exception {
	// 		changePage->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "changePage", this);
	}

	public void sort_OnStepProcess_0() throws Exception {
	// 		sort->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "sort", this);
	}

	public void appendItem_OnStepProcess_0() throws Exception {
	// 		appendItem->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "appendItem", this);
	}

	public void back_OnStepProcess_0() throws Exception {
	// 		back->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "back", this);
	}

	public void customAction_OnStepProcess_0() throws Exception {
	// 		customAction->OnStepProcess
		EngineHelper.delegate(DELEGATOR, "customAction", this);
	}

}
